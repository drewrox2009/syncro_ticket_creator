{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/./src/taskpane/taskpane.html","webpack://office-addin-taskpane/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/compat get default export","webpack://office-addin-taskpane/webpack/runtime/define property getters","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/./src/settings/settings.ts","webpack://office-addin-taskpane/./src/api/syncroApi.ts","webpack://office-addin-taskpane/./src/ui/uiHelpers.ts","webpack://office-addin-taskpane/./src/taskpane/taskpane.ts"],"sourcesContent":["// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/logo-filled.png\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"/> <title>Syncro Ticket Creator</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <img width=\\\"90\\\" height=\\\"90\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\" alt=\\\"Syncro\\\" title=\\\"Syncro\\\"/> <h1 class=\\\"ms-font-su\\\">Syncro Ticket Creator</h1> </header> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\"> <div id=\\\"status-message\\\" style=\\\"margin-bottom:10px\\\"></div> <form id=\\\"ticket-form\\\"> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"customer-select\\\">Select a Syncro Customer</label> <select id=\\\"customer-select\\\" class=\\\"ms-Dropdown\\\" required aria-label=\\\"Select Syncro Customer\\\"> <option value=\\\"\\\">Select a customer</option> </select> </div> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"contact-select\\\">Select a Contact</label> <select id=\\\"contact-select\\\" class=\\\"ms-Dropdown\\\" required aria-label=\\\"Select Contact\\\"> <option value=\\\"\\\">Select a contact</option> </select> </div> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"asset-select\\\">Select an Asset (Optional)</label> <select id=\\\"asset-select\\\" class=\\\"ms-Dropdown\\\" aria-label=\\\"Select Asset\\\"> <option value=\\\"\\\">Select an asset</option> </select> </div> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"ticket-title\\\">Ticket Title</label> <input type=\\\"text\\\" id=\\\"ticket-title\\\" class=\\\"ms-TextField-field\\\" required/> </div> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"ticket-message\\\">Ticket Message</label> <textarea id=\\\"ticket-message\\\" class=\\\"ms-TextField-field\\\" rows=\\\"5\\\" required></textarea> </div> <div class=\\\"ms-TextField\\\"> <button id=\\\"create-ticket\\\" class=\\\"ms-Button ms-Button--primary\\\"> <span class=\\\"ms-Button-label\\\">Create Ticket</span> </button> </div> </form> </main> </body> </html> \";\n// Exports\nexport default code;","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/* global Office */\n\n// Use MutationObserver to attach event listener when element is added to DOM\nconst observer = new MutationObserver((mutations) => {\n  mutations.forEach((mutation) => {\n    if (mutation.type === \"childList\" && mutation.addedNodes.length > 0) {\n      attachSaveSettingsListener();\n      observer.disconnect(); // Disconnect observer after listener is attached\n    }\n  });\n});\n\n// Start observing changes in the document body\nobserver.observe(document.body, { childList: true, subtree: true });\n\n// Call loadSettings to populate the input fields with saved settings\ndocument.addEventListener(\"DOMContentLoaded\", loadSettings);\n\nfunction attachSaveSettingsListener() {\n  const saveSettingsButton = document.getElementById(\"save-settings\");\n  if (saveSettingsButton) {\n    saveSettingsButton.addEventListener(\"click\", saveSettings);\n    console.log(\"settings.ts: Event listener attached to save-settings button\");\n  } else {\n    console.error(\"settings.ts: Element with id 'save-settings' not found\");\n  }\n}\n\nasync function saveSettings() {\n  console.log(\"settings.ts: saveSettings called\");\n  const syncroUrl = (document.getElementById(\"syncro-url\") as HTMLInputElement).value;\n  const syncroApiKey = (document.getElementById(\"syncro-api-key\") as HTMLInputElement).value;\n  const errorMessageDiv = document.getElementById(\"error-message\");\n\n  if (!syncroUrl || !syncroApiKey) {\n    showStatus(\"Please enter both Syncro URL and API Key.\", \"error\");\n    return;\n  }\n\n  try {\n    await saveSyncroSettings(syncroUrl, syncroApiKey);\n    console.log(\"settings.ts: Settings saved successfully\");\n    showStatus(\"Settings saved successfully!\", \"success\");\n    // Redirect back to the main taskpane\n    window.close();\n  } catch (error) {\n    console.error(\"settings.ts: Error saving settings:\", error);\n    showStatus(\"Error saving settings: \" + error.message, \"error\");\n  }\n}\n\nfunction loadSettings() {\n  console.log(\"settings.ts: loadSettings called\");\n  const settings = getSyncroSettings();\n  const syncroUrl = settings.syncroUrl;\n  const syncroApiKey = settings.syncroApiKey;\n\n  if (syncroUrl) {\n    (document.getElementById(\"syncro-url\") as HTMLInputElement).value = syncroUrl;\n  }\n  if (syncroApiKey) {\n    (document.getElementById(\"syncro-api-key\") as HTMLInputElement).value = syncroApiKey;\n  }\n}\n\n// Export functions to be used in other files\nexport function getSyncroSettings(): { syncroUrl: string; syncroApiKey: string } {\n  console.log(\"settings.ts: getSyncroSettings called\");\n  let syncroUrl = \"\";\n  let syncroApiKey = \"\";\n\n  if (typeof Office !== \"undefined\" && Office.context && Office.context.roamingSettings) {\n    syncroUrl = (Office.context.roamingSettings.get(\"syncroUrl\") as string) || \"\";\n    syncroApiKey = (Office.context.roamingSettings.get(\"syncroApiKey\") as string) || \"\";\n  } else {\n    syncroUrl = localStorage.getItem(\"syncroUrl\") || \"\";\n    syncroApiKey = localStorage.getItem(\"syncroApiKey\") || \"\";\n  }\n\n  console.log(\"settings.ts: Retrieved settings:\", { syncroUrl, syncroApiKey });\n  return { syncroUrl, syncroApiKey };\n}\n\nexport function saveSyncroSettings(syncroUrl: string, syncroApiKey: string): Promise<void> {\n  console.log(\"settings.ts: saveSyncroSettings called\", { syncroUrl, syncroApiKey });\n  return new Promise((resolve, reject) => {\n    if (typeof Office !== \"undefined\" && Office.context && Office.context.roamingSettings) {\n      try {\n        Office.context.roamingSettings.set(\"syncroUrl\", syncroUrl);\n        Office.context.roamingSettings.set(\"syncroApiKey\", syncroApiKey);\n        Office.context.roamingSettings.saveAsync((result) => {\n          if (result.status === Office.AsyncResultStatus.Succeeded) {\n            resolve();\n          } else {\n            reject(new Error(\"Error saving settings in Office environment: \" + JSON.stringify(result.error)));\n          }\n        });\n      } catch (error) {\n        reject(new Error(\"Error saving settings in Office environment: \" + error.message));\n      }\n    } else {\n      try {\n        localStorage.setItem(\"syncroUrl\", syncroUrl);\n        localStorage.setItem(\"syncroApiKey\", syncroApiKey);\n        resolve();\n      } catch (error) {\n        reject(new Error(\"Error saving settings in local storage: \" + error.message));\n      }\n    }\n  });\n}\n\nfunction showStatus(message: string, type: \"info\" | \"error\" | \"success\" = \"info\") {\n  const statusElement = document.getElementById(\"status-message\");\n  if (statusElement) {\n    statusElement.textContent = message;\n    statusElement.className = `status-message ${type}`;\n    statusElement.style.display = \"block\";\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n// Declare fetch as a global for TypeScript\ndeclare const fetch: (input: RequestInfo, init?: RequestInit) => Promise<Response>;\n\ninterface SyncroCustomer {\n  id: number;\n  name: string;\n}\n\ninterface SyncroContact {\n  id: number;\n  name: string;\n}\n\ninterface SyncroAsset {\n  id: number;\n  name: string;\n}\n\nexport async function fetchSyncroCustomers(syncroUrl: string, syncroApiKey: string): Promise<SyncroCustomer[]> {\n  console.log(\"Syncro API: fetchSyncroCustomers called\");\n  const response = await fetch(`${syncroUrl}/api/v1/customers`, {\n    headers: {\n      Authorization: `Bearer ${syncroApiKey}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error(`Failed to fetch customers: ${response.status} ${response.statusText}`);\n  }\n  return response.json();\n}\n\nexport async function fetchSyncroContacts(\n  syncroUrl: string,\n  syncroApiKey: string,\n  customerId: number\n): Promise<SyncroContact[]> {\n  console.log(\"Syncro API: fetchSyncroContacts called\");\n  const response = await fetch(`${syncroUrl}/api/v1/customers/${customerId}/contacts`, {\n    headers: {\n      Authorization: `Bearer ${syncroApiKey}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error(`Failed to fetch contacts: ${response.status} ${response.statusText}`);\n  }\n  return response.json();\n}\n\nexport async function fetchSyncroAssets(\n  syncroUrl: string,\n  syncroApiKey: string,\n  customerId: number\n): Promise<SyncroAsset[]> {\n  console.log(\"Syncro API: fetchSyncroAssets called\");\n  const response = await fetch(`${syncroUrl}/api/v1/customers/${customerId}/assets`, {\n    headers: {\n      Authorization: `Bearer ${syncroApiKey}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error(`Failed to fetch assets: ${response.status} ${response.statusText}`);\n  }\n  return response.json();\n}\n\nexport async function createSyncroTicket(syncroUrl: string, syncroApiKey: string, ticketData: any): Promise<any> {\n  console.log(\"Syncro API: createSyncroTicket called\");\n  const response = await fetch(`${syncroUrl}/api/v1/tickets`, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${syncroApiKey}`,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(ticketData),\n  });\n  if (!response.ok) {\n    throw new Error(`Failed to create ticket: ${response.status} ${response.statusText}`);\n  }\n  return response.json();\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\nexport function showStatus(\n  message: string,\n  type: \"info\" | \"error\" | \"success\" = \"info\",\n  elementId: string = \"status-message\"\n) {\n  console.log(`UI Helpers: showStatus called - ${type}: ${message}`);\n  const statusElement = document.getElementById(elementId);\n  if (statusElement) {\n    statusElement.textContent = message;\n    statusElement.className = `status-message ${type}`;\n    statusElement.style.display = \"block\";\n  }\n}\n\nexport function hideStatus(elementId: string = \"status-message\") {\n  console.log(\"UI Helpers: hideStatus called\");\n  const statusElement = document.getElementById(elementId);\n  if (statusElement) {\n    statusElement.style.display = \"none\";\n  }\n}\n\nexport function sanitizeHtml(input: string): string {\n  const div = document.createElement(\"div\");\n  div.textContent = input;\n  return div.innerHTML;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global Office */\n\nimport { getSyncroSettings, saveSyncroSettings } from \"../settings/settings\";\nimport * as syncroApi from \"../api/syncroApi\";\nimport * as uiHelpers from \"../ui/uiHelpers\";\n\ninterface EmailInfo {\n  subject: string;\n  content: string;\n  senderEmail: string;\n  senderName: string;\n}\n\n// Declare syncroApiKey and syncroUrl at the top\nlet syncroApiKey: string;\nlet syncroUrl: string;\n\n// Function to initialize the app\nfunction initializeApp() {\n  console.log(\"Syncro Ticket Creator: initializeApp called\");\n  loadSyncroSettings();\n  document.getElementById(\"create-ticket\")!.onclick = createTicket;\n}\n\nif (typeof Office !== \"undefined\") {\n  console.log(\"Syncro Ticket Creator: Office environment detected\");\n  Office.onReady((info: { host: Office.HostType; platform: Office.PlatformType }) => {\n    console.log(\"Syncro Ticket Creator: Office.onReady called\", info);\n    if (info.host === Office.HostType.Outlook) {\n      document.addEventListener(\"DOMContentLoaded\", initializeApp); // Ensure DOM is fully loaded\n    }\n  });\n} else {\n  console.log(\"Syncro Ticket Creator: Non-Office environment detected\");\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    console.log(\"Syncro Ticket Creator: DOMContentLoaded event fired\");\n    initializeApp();\n  });\n}\n\nasync function loadSyncroSettings() {\n  console.log(\"Syncro Ticket Creator: loadSyncroSettings called\");\n  const settings = getSyncroSettings();\n  console.log(\"Retrieved settings:\", settings);\n  syncroApiKey = settings.syncroApiKey;\n  syncroUrl = settings.syncroUrl;\n\n  showSettingsUI();\n}\n\nfunction showSettingsUI() {\n  console.log(\"Syncro Ticket Creator: showSettingsUI called\");\n  const appBody = document.getElementById(\"app-body\");\n  if (appBody) {\n    console.log(\"Syncro Ticket Creator: app-body element found\");\n    appBody.innerHTML = `\n      <h2>Syncro API Settings</h2>\n      <div class=\"ms-TextField\">\n        <label class=\"ms-Label\" for=\"syncro-url\">Syncro URL</label>\n        <input type=\"text\" id=\"syncro-url\" class=\"ms-TextField-field\" value=\"${syncroUrl || \"\"}\" required />\n      </div>\n      <div class=\"ms-TextField\">\n        <label class=\"ms-Label\" for=\"syncro-api-key\">Syncro API Key</label>\n        <input type=\"password\" id=\"syncro-api-key\" class=\"ms-TextField-field\" value=\"${syncroApiKey || \"\"}\" required />\n      </div>\n      <div class=\"ms-TextField\">\n        <button id=\"save-settings\" class=\"ms-Button ms-Button--primary\">\n          <span class=\"ms-Button-label\">Save Settings</span>\n        </button>\n        <button id=\"test-api-settings\" class=\"ms-Button ms-Button--secondary\">\n          <span class=\"ms-Button-label\">Test API Settings</span>\n        </button>\n      </div>\n    `;\n    document.getElementById(\"save-settings\")!.onclick = saveSettings;\n    document.getElementById(\"test-api-settings\")!.onclick = testApiSettings;\n    console.log(\"Syncro Ticket Creator: Settings UI rendered\");\n  } else {\n    console.error(\"Syncro Ticket Creator: Element with id 'app-body' not found\");\n  }\n}\n\nasync function saveSettings() {\n  console.log(\"Syncro Ticket Creator: saveSettings called\");\n  const newSyncroUrl = (document.getElementById(\"syncro-url\") as HTMLInputElement).value;\n  const newSyncroApiKey = (document.getElementById(\"syncro-api-key\") as HTMLInputElement).value;\n\n  if (!newSyncroUrl || !newSyncroApiKey) {\n    uiHelpers.showStatus(\"Please enter both Syncro URL and API Key.\", \"error\");\n    return;\n  }\n\n  try {\n    await saveSyncroSettings(newSyncroUrl, newSyncroApiKey);\n    syncroUrl = newSyncroUrl;\n    syncroApiKey = newSyncroApiKey;\n    uiHelpers.showStatus(\"Settings saved successfully. Initializing app...\", \"success\");\n    await verifyApiSettings();\n    await populateCustomers();\n    uiHelpers.hideStatus();\n  } catch (error) {\n    console.error(\"Error saving settings:\", error);\n    uiHelpers.showStatus(\"Failed to save settings. Please try again.\", \"error\");\n  }\n}\n\n// New function to test API settings\nasync function testApiSettings() {\n  console.log(\"Syncro Ticket Creator: testApiSettings called\");\n  const testSyncroUrl = (document.getElementById(\"syncro-url\") as HTMLInputElement).value;\n  const testSyncroApiKey = (document.getElementById(\"syncro-api-key\") as HTMLInputElement).value;\n\n  if (!testSyncroUrl || !testSyncroApiKey) {\n    uiHelpers.showStatus(\"Please enter both Syncro URL and API Key.\", \"error\");\n    return;\n  }\n\n  try {\n    const response = await syncroApi.fetchSyncroCustomers(testSyncroUrl, testSyncroApiKey);\n    console.log(\"Syncro Ticket Creator: API settings verified successfully\", response);\n    uiHelpers.showStatus(\"API settings verified successfully!\", \"success\");\n  } catch (error) {\n    console.error(\"Error verifying API settings:\", error);\n    uiHelpers.showStatus(\"Failed to verify API settings. Please try again.\", \"error\");\n  }\n}\n\nasync function verifyApiSettings() {\n  console.log(\"Syncro Ticket Creator: verifyApiSettings called\");\n  try {\n    await syncroApi.fetchSyncroCustomers(syncroUrl, syncroApiKey);\n  } catch (error) {\n    console.error(\"Error verifying API settings:\", error);\n    throw new Error(\"Invalid API settings. Please check your Syncro URL and API Key.\");\n  }\n}\n\nasync function populateCustomers() {\n  console.log(\"Syncro Ticket Creator: populateCustomers called\");\n  try {\n    uiHelpers.showStatus(\"Loading customers...\", \"info\");\n    const customers = await syncroApi.fetchSyncroCustomers(syncroUrl, syncroApiKey);\n    const customerSelect = document.getElementById(\"customer-select\") as HTMLSelectElement;\n    if (!customerSelect) {\n      console.error(\"Syncro Ticket Creator: Element with id 'customer-select' not found\");\n      return;\n    }\n    customerSelect.innerHTML = '<option value=\"\">Select a customer</option>';\n    customers.forEach((customer) => {\n      const option = document.createElement(\"option\");\n      option.value = customer.id.toString();\n      option.textContent = uiHelpers.sanitizeHtml(customer.name);\n      customerSelect.appendChild(option);\n    });\n    customerSelect.onchange = populateContacts;\n    uiHelpers.hideStatus();\n  } catch (error) {\n    console.error(\"Error populating customers:\", error);\n    uiHelpers.showStatus(\"Failed to load customers. Please check your Syncro settings.\", \"error\");\n    throw error;\n  }\n}\n\nasync function populateContacts() {\n  console.log(\"Syncro Ticket Creator: populateContacts called\");\n  try {\n    uiHelpers.showStatus(\"Loading contacts...\", \"info\");\n    const customerSelect = document.getElementById(\"customer-select\") as HTMLSelectElement;\n    const customerId = customerSelect.value;\n    const contacts = await syncroApi.fetchSyncroContacts(syncroUrl, syncroApiKey, parseInt(customerId));\n    const contactSelect = document.getElementById(\"contact-select\") as HTMLSelectElement;\n    if (!contactSelect) {\n      console.error(\"Syncro Ticket Creator: Element with id 'contact-select' not found\");\n      return;\n    }\n    contactSelect.innerHTML = '<option value=\"\">Select a contact</option>';\n    contacts.forEach((contact) => {\n      const option = document.createElement(\"option\");\n      option.value = contact.id.toString();\n      option.textContent = uiHelpers.sanitizeHtml(contact.name);\n      contactSelect.appendChild(option);\n    });\n    uiHelpers.hideStatus();\n    populateAssets();\n  } catch (error) {\n    console.error(\"Error populating contacts:\", error);\n    uiHelpers.showStatus(\"Failed to load contacts. Please try again.\", \"error\");\n  }\n}\n\nasync function populateAssets() {\n  console.log(\"Syncro Ticket Creator: populateAssets called\");\n  try {\n    uiHelpers.showStatus(\"Loading assets...\", \"info\");\n    const customerSelect = document.getElementById(\"customer-select\") as HTMLSelectElement;\n    const customerId = customerSelect.value;\n    const assets = await syncroApi.fetchSyncroAssets(syncroUrl, syncroApiKey, parseInt(customerId));\n    const assetSelect = document.getElementById(\"asset-select\") as HTMLSelectElement;\n    if (!assetSelect) {\n      console.error(\"Syncro Ticket Creator: Element with id 'asset-select' not found\");\n      return;\n    }\n    assetSelect.innerHTML = '<option value=\"\">Select an asset</option>';\n    assets.forEach((asset) => {\n      const option = document.createElement(\"option\");\n      option.value = asset.id.toString();\n      option.textContent = uiHelpers.sanitizeHtml(asset.name);\n      assetSelect.appendChild(option);\n    });\n    uiHelpers.hideStatus();\n  } catch (error) {\n    console.error(\"Error populating assets:\", error);\n    uiHelpers.showStatus(\"Failed to load assets. Please try again.\", \"error\");\n  }\n}\n\nasync function createTicket(): Promise<void> {\n  console.log(\"Syncro Ticket Creator: createTicket called\");\n  try {\n    uiHelpers.showStatus(\"Creating ticket...\", \"info\");\n    const emailInfo = await getEmailInfo();\n    const customerId = (document.getElementById(\"customer-select\") as HTMLSelectElement).value;\n    const contactId = (document.getElementById(\"contact-select\") as HTMLSelectElement).value;\n    const assetId = (document.getElementById(\"asset-select\") as HTMLSelectElement).value;\n    const ticketTitle = (document.getElementById(\"ticket-title\") as HTMLInputElement).value || emailInfo.subject;\n    const ticketMessage = (document.getElementById(\"ticket-message\") as HTMLTextAreaElement).value || emailInfo.content;\n\n    if (!customerId || !contactId || !ticketTitle || !ticketMessage) {\n      uiHelpers.showStatus(\"Please fill in all required fields.\", \"error\");\n      return;\n    }\n\n    const ticketData = {\n      customer_id: parseInt(customerId),\n      contact_id: parseInt(contactId),\n      asset_id: assetId ? parseInt(assetId) : null,\n      subject: ticketTitle,\n      problem_type: \"Other\",\n      status: \"New\",\n      comment: ticketMessage,\n    };\n\n    const createdTicket = await syncroApi.createSyncroTicket(syncroUrl, syncroApiKey, ticketData);\n    console.log(\"Ticket created:\", createdTicket);\n    uiHelpers.showStatus(\"Ticket created successfully!\", \"success\");\n  } catch (error) {\n    console.error(\"Error creating ticket:\", error);\n    uiHelpers.showStatus(\"Failed to create ticket. Please try again.\", \"error\");\n  } finally {\n    uiHelpers.hideStatus();\n  }\n}\n\nasync function getEmailInfo(): Promise<EmailInfo> {\n  console.log(\"Syncro Ticket Creator: getEmailInfo called\");\n  return new Promise((resolve) => {\n    if (typeof Office !== \"undefined\" && Office.context && Office.context.mailbox) {\n      const item = Office.context.mailbox.item;\n      const emailInfo: EmailInfo = {\n        subject: item?.subject || \"\",\n        content: \"\",\n        senderEmail: item?.from?.emailAddress || \"\",\n        senderName: item?.from?.displayName || \"\",\n      };\n\n      item?.body.getAsync(Office.CoercionType.Text, (result) => {\n        if (result.status === Office.AsyncResultStatus.Succeeded) {\n          emailInfo.content = result.value;\n        }\n        resolve(emailInfo);\n      });\n    } else {\n      resolve({\n        subject: \"\",\n        content: \"\",\n        senderEmail: \"\",\n        senderName: \"\",\n      });\n    }\n  });\n}\n"],"names":["___HTML_LOADER_IMPORT_0___","___HTML_LOADER_IMPORT_1___","module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","observer","MutationObserver","mutations","forEach","mutation","type","addedNodes","saveSettingsButton","getElementById","addEventListener","saveSettings","console","log","error","attachSaveSettingsListener","disconnect","async","syncroUrl","value","syncroApiKey","saveSyncroSettings","showStatus","close","message","getSyncroSettings","Office","context","roamingSettings","localStorage","getItem","Promise","resolve","reject","set","saveAsync","result","status","AsyncResultStatus","Succeeded","JSON","stringify","setItem","statusElement","textContent","className","style","display","fetchSyncroCustomers","response","fetch","headers","Authorization","ok","statusText","json","elementId","hideStatus","sanitizeHtml","input","div","createElement","innerHTML","initializeApp","settings","appBody","onclick","testApiSettings","showSettingsUI","loadSyncroSettings","createTicket","newSyncroUrl","newSyncroApiKey","uiHelpers","syncroApi","verifyApiSettings","customers","customerSelect","customer","option","id","toString","name","appendChild","onchange","populateContacts","populateCustomers","testSyncroUrl","testSyncroApiKey","customerId","contacts","parseInt","contactSelect","contact","assets","assetSelect","asset","populateAssets","emailInfo","mailbox","item","subject","content","senderEmail","from","emailAddress","senderName","displayName","body","getAsync","CoercionType","Text","getEmailInfo","contactId","assetId","ticketTitle","ticketMessage","ticketData","customer_id","contact_id","asset_id","problem_type","comment","createdTicket","method","observe","childList","subtree","onReady","info","host","HostType","Outlook","URL"],"sourceRoot":""}