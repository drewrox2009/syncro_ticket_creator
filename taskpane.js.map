{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/./src/taskpane/taskpane.html","webpack://office-addin-taskpane/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/compat get default export","webpack://office-addin-taskpane/webpack/runtime/define property getters","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/./src/settings/settings.ts","webpack://office-addin-taskpane/./src/taskpane/taskpane.ts"],"sourcesContent":["// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/logo-filled.png\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"/> <title>Syncro Ticket Creator</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <img width=\\\"90\\\" height=\\\"90\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\" alt=\\\"Syncro\\\" title=\\\"Syncro\\\"/> <h1 class=\\\"ms-font-su\\\">Syncro Ticket Creator</h1> </header> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\"> <form id=\\\"ticket-form\\\"> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"customer-select\\\">Syncro Customer</label> <select id=\\\"customer-select\\\" class=\\\"ms-Dropdown\\\" required aria-label=\\\"Select Syncro Customer\\\"> <option value=\\\"\\\">Select a customer</option> </select> </div> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"contact-select\\\">Contact</label> <select id=\\\"contact-select\\\" class=\\\"ms-Dropdown\\\" required aria-label=\\\"Select Contact\\\"> <option value=\\\"\\\">Select a contact</option> </select> </div> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"asset-select\\\">Asset (Optional)</label> <select id=\\\"asset-select\\\" class=\\\"ms-Dropdown\\\" aria-label=\\\"Select Asset\\\"> <option value=\\\"\\\">Select an asset</option> </select> </div> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"ticket-title\\\">Ticket Title</label> <input type=\\\"text\\\" id=\\\"ticket-title\\\" class=\\\"ms-TextField-field\\\" required/> </div> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"ticket-message\\\">Ticket Message</label> <textarea id=\\\"ticket-message\\\" class=\\\"ms-TextField-field\\\" rows=\\\"5\\\" required></textarea> </div> <div class=\\\"ms-TextField\\\"> <button id=\\\"create-ticket\\\" class=\\\"ms-Button ms-Button--primary\\\"> <span class=\\\"ms-Button-label\\\">Create Ticket</span> </button> </div> </form> </main> </body> </html> \";\n// Exports\nexport default code;","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global Office, document, console */\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Outlook) {\n    document.getElementById(\"save-settings\")!.onclick = saveSettings;\n    loadSettings();\n  }\n});\n\nfunction saveSettings() {\n  const syncroUrl = (document.getElementById(\"syncro-url\") as HTMLInputElement).value;\n  const syncroApiKey = (document.getElementById(\"syncro-api-key\") as HTMLInputElement).value;\n\n  Office.context.roamingSettings.set(\"syncroUrl\", syncroUrl);\n  Office.context.roamingSettings.set(\"syncroApiKey\", syncroApiKey);\n  Office.context.roamingSettings.saveAsync((result) => {\n    if (result.status === Office.AsyncResultStatus.Succeeded) {\n      console.log(\"Settings saved successfully\");\n      // TODO: Show success message to user\n    } else {\n      console.error(\"Error saving settings:\", result.error);\n      // TODO: Show error message to user\n    }\n  });\n}\n\nfunction loadSettings() {\n  const syncroUrl = Office.context.roamingSettings.get(\"syncroUrl\");\n  const syncroApiKey = Office.context.roamingSettings.get(\"syncroApiKey\");\n\n  if (syncroUrl) {\n    (document.getElementById(\"syncro-url\") as HTMLInputElement).value = syncroUrl;\n  }\n  if (syncroApiKey) {\n    (document.getElementById(\"syncro-api-key\") as HTMLInputElement).value = syncroApiKey;\n  }\n}\n\n// Export functions to be used in other files\nexport function getSyncroSettings(): { syncroUrl: string; syncroApiKey: string } {\n  const syncroUrl = Office.context.roamingSettings.get(\"syncroUrl\") as string;\n  const syncroApiKey = Office.context.roamingSettings.get(\"syncroApiKey\") as string;\n  return { syncroUrl, syncroApiKey };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global Office */\n\n// Declare fetch as a global for TypeScript\ndeclare const fetch: (input: RequestInfo, init?: RequestInit) => Promise<Response>;\n\nimport { getSyncroSettings } from \"../settings/settings\";\n\n// Define environment-based configuration\nconst BASE_URL = \"https://drewrox2009.github.io/syncro_ticket_creator\";\n\ninterface EmailInfo {\n  subject: string;\n  content: string;\n  senderEmail: string;\n  senderName: string;\n}\n\ninterface SyncroCustomer {\n  id: number;\n  name: string;\n}\n\ninterface SyncroContact {\n  id: number;\n  name: string;\n}\n\ninterface SyncroAsset {\n  id: number;\n  name: string;\n}\n\nlet syncroApiKey: string;\nlet syncroUrl: string;\n\nOffice.onReady((info: { host: Office.HostType; platform: Office.PlatformType }) => {\n  if (info.host === Office.HostType.Outlook) {\n    document.getElementById(\"create-ticket\")!.onclick = createTicket;\n    loadSyncroSettings();\n  }\n});\n\nasync function loadSyncroSettings() {\n  const settings = getSyncroSettings();\n  syncroApiKey = settings.syncroApiKey;\n  syncroUrl = settings.syncroUrl;\n\n  if (!syncroApiKey || !syncroUrl) {\n    // Prompt user to set up settings\n    document.getElementById(\"app-body\")!.innerHTML = `\n      <p>Please set up your Syncro settings before using this add-in.</p>\n      <button id=\"open-settings\" class=\"ms-Button ms-Button--primary\">\n        <span class=\"ms-Button-label\">Open Settings</span>\n      </button>\n    `;\n    document.getElementById(\"open-settings\")!.onclick = openSettings;\n  } else {\n    // Settings are available, initialize the app\n    showStatus(\"Loading customers...\");\n    await populateCustomers();\n    hideStatus();\n  }\n}\n\nfunction openSettings() {\n  Office.context.ui.displayDialogAsync(\n    `${BASE_URL}/settings/settings.html`,\n    { height: 60, width: 30, displayInIframe: true },\n    (result) => {\n      if (result.status === Office.AsyncResultStatus.Failed) {\n        console.error(\"Failed to open settings dialog:\", result.error);\n        showStatus(\"Failed to open settings. Please try again.\", \"error\");\n      }\n    }\n  );\n}\n\nasync function populateCustomers() {\n  try {\n    const customers = await fetchSyncroCustomers();\n    const customerSelect = document.getElementById(\"customer-select\") as HTMLSelectElement;\n    customerSelect.innerHTML = '<option value=\"\">Select a customer</option>';\n    customers.forEach((customer) => {\n      const option = document.createElement(\"option\");\n      option.value = customer.id.toString();\n      option.textContent = sanitizeHtml(customer.name);\n      customerSelect.appendChild(option);\n    });\n    customerSelect.onchange = populateContacts;\n  } catch (error) {\n    console.error(\"Error populating customers:\", error);\n    showStatus(\"Failed to load customers. Please check your Syncro settings.\", \"error\");\n  }\n}\n\nasync function populateContacts() {\n  try {\n    showStatus(\"Loading contacts...\");\n    const customerId = (document.getElementById(\"customer-select\") as HTMLSelectElement).value;\n    const contacts = await fetchSyncroContacts(parseInt(customerId));\n    const contactSelect = document.getElementById(\"contact-select\") as HTMLSelectElement;\n    contactSelect.innerHTML = '<option value=\"\">Select a contact</option>';\n    contacts.forEach((contact) => {\n      const option = document.createElement(\"option\");\n      option.value = contact.id.toString();\n      option.textContent = sanitizeHtml(contact.name);\n      contactSelect.appendChild(option);\n    });\n    hideStatus();\n    populateAssets();\n  } catch (error) {\n    console.error(\"Error populating contacts:\", error);\n    showStatus(\"Failed to load contacts. Please try again.\", \"error\");\n  }\n}\n\nasync function populateAssets() {\n  try {\n    showStatus(\"Loading assets...\");\n    const customerId = (document.getElementById(\"customer-select\") as HTMLSelectElement).value;\n    const assets = await fetchSyncroAssets(parseInt(customerId));\n    const assetSelect = document.getElementById(\"asset-select\") as HTMLSelectElement;\n    assetSelect.innerHTML = '<option value=\"\">Select an asset</option>';\n    assets.forEach((asset) => {\n      const option = document.createElement(\"option\");\n      option.value = asset.id.toString();\n      option.textContent = sanitizeHtml(asset.name);\n      assetSelect.appendChild(option);\n    });\n    hideStatus();\n  } catch (error) {\n    console.error(\"Error populating assets:\", error);\n    showStatus(\"Failed to load assets. Please try again.\", \"error\");\n  }\n}\n\nasync function createTicket(): Promise<void> {\n  try {\n    showStatus(\"Creating ticket...\");\n    const emailInfo = await getEmailInfo();\n    const customerId = (document.getElementById(\"customer-select\") as HTMLSelectElement).value;\n    const contactId = (document.getElementById(\"contact-select\") as HTMLSelectElement).value;\n    const assetId = (document.getElementById(\"asset-select\") as HTMLSelectElement).value;\n    const ticketTitle = (document.getElementById(\"ticket-title\") as HTMLInputElement).value || emailInfo.subject;\n    const ticketMessage = (document.getElementById(\"ticket-message\") as HTMLTextAreaElement).value || emailInfo.content;\n\n    const ticketData = {\n      customer_id: parseInt(customerId),\n      contact_id: parseInt(contactId),\n      asset_id: assetId ? parseInt(assetId) : null,\n      subject: ticketTitle,\n      problem_type: \"Other\",\n      status: \"New\",\n      comment: ticketMessage,\n    };\n\n    const createdTicket = await createSyncroTicket(ticketData);\n    console.log(\"Ticket created:\", createdTicket);\n    showStatus(\"Ticket created successfully!\", \"success\");\n  } catch (error) {\n    console.error(\"Error creating ticket:\", error);\n    showStatus(\"Failed to create ticket. Please try again.\", \"error\");\n  }\n}\n\nasync function getEmailInfo(): Promise<EmailInfo> {\n  return new Promise((resolve) => {\n    const item = Office.context.mailbox.item;\n    const emailInfo: EmailInfo = {\n      subject: item?.subject || \"\",\n      content: \"\",\n      senderEmail: item?.from?.emailAddress || \"\",\n      senderName: item?.from?.displayName || \"\",\n    };\n\n    item?.body.getAsync(Office.CoercionType.Text, (result) => {\n      if (result.status === Office.AsyncResultStatus.Succeeded) {\n        emailInfo.content = result.value;\n      }\n      resolve(emailInfo);\n    });\n  });\n}\n\n// Syncro API functions\nasync function fetchSyncroCustomers(): Promise<SyncroCustomer[]> {\n  const response = await fetch(`${syncroUrl}/api/v1/customers`, {\n    headers: {\n      Authorization: `Bearer ${syncroApiKey}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch customers\");\n  }\n  return response.json();\n}\n\nasync function fetchSyncroContacts(customerId: number): Promise<SyncroContact[]> {\n  const response = await fetch(`${syncroUrl}/api/v1/customers/${customerId}/contacts`, {\n    headers: {\n      Authorization: `Bearer ${syncroApiKey}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch contacts\");\n  }\n  return response.json();\n}\n\nasync function fetchSyncroAssets(customerId: number): Promise<SyncroAsset[]> {\n  const response = await fetch(`${syncroUrl}/api/v1/customers/${customerId}/assets`, {\n    headers: {\n      Authorization: `Bearer ${syncroApiKey}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch assets\");\n  }\n  return response.json();\n}\n\nasync function createSyncroTicket(ticketData: any): Promise<any> {\n  const response = await fetch(`${syncroUrl}/api/v1/tickets`, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${syncroApiKey}`,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(ticketData),\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to create ticket\");\n  }\n  return response.json();\n}\n\nfunction showStatus(message: string, type: \"info\" | \"error\" | \"success\" = \"info\") {\n  const statusElement = document.getElementById(\"status-message\");\n  if (!statusElement) {\n    const newStatusElement = document.createElement(\"div\");\n    newStatusElement.id = \"status-message\";\n    document.body.insertBefore(newStatusElement, document.body.firstChild);\n  }\n  const element = statusElement || document.getElementById(\"status-message\")!;\n  element.textContent = sanitizeHtml(message);\n  element.className = `status-message ${type}`;\n  element.style.display = \"block\";\n}\n\nfunction hideStatus() {\n  const statusElement = document.getElementById(\"status-message\");\n  if (statusElement) {\n    statusElement.style.display = \"none\";\n  }\n}\n\n// Simple HTML sanitization function\nfunction sanitizeHtml(input: string): string {\n  return input.replace(/[&<>\"']/g, function (match) {\n    return (\n      {\n        \"&\": \"&amp;\",\n        \"<\": \"&lt;\",\n        \">\": \"&gt;\",\n        '\"': \"&quot;\",\n        \"'\": \"&#39;\",\n      }[match] || match\n    );\n  });\n}\n"],"names":["___HTML_LOADER_IMPORT_0___","___HTML_LOADER_IMPORT_1___","module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","saveSettings","syncroUrl","getElementById","value","syncroApiKey","Office","context","roamingSettings","set","saveAsync","result","status","AsyncResultStatus","Succeeded","console","log","error","openSettings","ui","displayDialogAsync","height","width","displayInIframe","Failed","showStatus","async","populateContacts","customerId","contacts","response","fetch","headers","Authorization","ok","json","fetchSyncroContacts","parseInt","contactSelect","innerHTML","forEach","contact","option","createElement","id","toString","textContent","sanitizeHtml","name","appendChild","hideStatus","assets","fetchSyncroAssets","assetSelect","asset","populateAssets","createTicket","emailInfo","Promise","resolve","item","mailbox","subject","content","senderEmail","from","emailAddress","senderName","displayName","body","getAsync","CoercionType","Text","getEmailInfo","contactId","assetId","ticketTitle","ticketMessage","ticketData","customer_id","contact_id","asset_id","problem_type","comment","createdTicket","method","JSON","stringify","createSyncroTicket","message","type","statusElement","newStatusElement","insertBefore","firstChild","element","className","style","display","input","match","onReady","info","host","HostType","Outlook","onclick","loadSettings","settings","customers","fetchSyncroCustomers","customerSelect","customer","onchange","populateCustomers","loadSyncroSettings","URL"],"sourceRoot":""}