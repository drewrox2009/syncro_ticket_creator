{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/./src/taskpane/taskpane.html","webpack://office-addin-taskpane/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/compat get default export","webpack://office-addin-taskpane/webpack/runtime/define property getters","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/./src/settings/settings.ts","webpack://office-addin-taskpane/./src/taskpane/taskpane.ts"],"sourcesContent":["// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/logo-filled.png\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"/> <title>Syncro Ticket Creator</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <img width=\\\"90\\\" height=\\\"90\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\" alt=\\\"Syncro\\\" title=\\\"Syncro\\\"/> <h1 class=\\\"ms-font-su\\\">Syncro Ticket Creator</h1> </header> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\"> <form id=\\\"ticket-form\\\"> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"customer-select\\\">Syncro Customer</label> <select id=\\\"customer-select\\\" class=\\\"ms-Dropdown\\\" required aria-label=\\\"Select Syncro Customer\\\"> <option value=\\\"\\\">Select a customer</option> </select> </div> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"contact-select\\\">Contact</label> <select id=\\\"contact-select\\\" class=\\\"ms-Dropdown\\\" required aria-label=\\\"Select Contact\\\"> <option value=\\\"\\\">Select a contact</option> </select> </div> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"asset-select\\\">Asset (Optional)</label> <select id=\\\"asset-select\\\" class=\\\"ms-Dropdown\\\" aria-label=\\\"Select Asset\\\"> <option value=\\\"\\\">Select an asset</option> </select> </div> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"ticket-title\\\">Ticket Title</label> <input type=\\\"text\\\" id=\\\"ticket-title\\\" class=\\\"ms-TextField-field\\\" required/> </div> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"ticket-message\\\">Ticket Message</label> <textarea id=\\\"ticket-message\\\" class=\\\"ms-TextField-field\\\" rows=\\\"5\\\" required></textarea> </div> <div class=\\\"ms-TextField\\\"> <button id=\\\"create-ticket\\\" class=\\\"ms-Button ms-Button--primary\\\"> <span class=\\\"ms-Button-label\\\">Create Ticket</span> </button> </div> </form> </main> </body> </html> \";\n// Exports\nexport default code;","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global Office */\n\n// Use MutationObserver to attach event listener when element is added to DOM\nconst observer = new MutationObserver((mutations) => {\n  mutations.forEach((mutation) => {\n    if (mutation.type === \"childList\" && mutation.addedNodes.length > 0) {\n      attachSaveSettingsListener();\n      observer.disconnect(); // Disconnect observer after listener is attached\n    }\n  });\n});\n\n// Start observing changes in the document body\nobserver.observe(document.body, { childList: true, subtree: true });\n\nfunction attachSaveSettingsListener() {\n  const saveSettingsButton = document.getElementById(\"save-settings\");\n  if (saveSettingsButton) {\n    saveSettingsButton.addEventListener(\"click\", saveSettings);\n    console.log(\"settings.ts: Event listener attached to save-settings button\");\n  } else {\n    console.error(\"settings.ts: Element with id 'save-settings' not found\");\n  }\n}\n\nasync function saveSettings() {\n  console.log(\"settings.ts: saveSettings called\");\n  const syncroUrl = (document.getElementById(\"syncro-url\") as HTMLInputElement).value;\n  const syncroApiKey = (document.getElementById(\"syncro-api-key\") as HTMLInputElement).value;\n\n  try {\n    await saveSyncroSettings(syncroUrl, syncroApiKey);\n    console.log(\"settings.ts: Settings saved successfully\");\n    // Redirect back to the main taskpane\n    window.close();\n  } catch (error) {\n    console.error(\"settings.ts: Error saving settings:\", error);\n    // Show error message to user\n    alert(\"Error saving settings: \" + error.message);\n  }\n}\n\nfunction loadSettings() {\n  console.log(\"settings.ts: loadSettings called\");\n  const syncroUrl = getSyncroSettings().syncroUrl;\n  const syncroApiKey = getSyncroSettings().syncroApiKey;\n\n  if (syncroUrl) {\n    (document.getElementById(\"syncro-url\") as HTMLInputElement).value = syncroUrl;\n  }\n  if (syncroApiKey) {\n    (document.getElementById(\"syncro-api-key\") as HTMLInputElement).value = syncroApiKey;\n  }\n}\n\n// Export functions to be used in other files\nexport function getSyncroSettings(): { syncroUrl: string; syncroApiKey: string } {\n  console.log(\"settings.ts: getSyncroSettings called\");\n  let syncroUrl = \"\";\n  let syncroApiKey = \"\";\n\n  if (typeof Office !== \"undefined\" && Office.context && Office.context.roamingSettings) {\n    syncroUrl = (Office.context.roamingSettings.get(\"syncroUrl\") as string) || \"\";\n    syncroApiKey = (Office.context.roamingSettings.get(\"syncroApiKey\") as string) || \"\";\n  } else {\n    syncroUrl = localStorage.getItem(\"syncroUrl\") || \"\";\n    syncroApiKey = localStorage.getItem(\"syncroApiKey\") || \"\";\n  }\n\n  console.log(\"settings.ts: Retrieved settings:\", { syncroUrl, syncroApiKey });\n  return { syncroUrl, syncroApiKey };\n}\n\nexport function saveSyncroSettings(syncroUrl: string, syncroApiKey: string): Promise<void> {\n  console.log(\"settings.ts: saveSyncroSettings called\", { syncroUrl, syncroApiKey });\n  return new Promise((resolve, reject) => {\n    if (typeof Office !== \"undefined\" && Office.context && Office.context.roamingSettings) {\n      try {\n        Office.context.roamingSettings.set(\"syncroUrl\", syncroUrl);\n        Office.context.roamingSettings.set(\"syncroApiKey\", syncroApiKey);\n        Office.context.roamingSettings.saveAsync((result) => {\n          if (result.status === Office.AsyncResultStatus.Succeeded) {\n            resolve();\n          } else {\n            reject(new Error(\"Error saving settings in Office environment: \" + JSON.stringify(result.error)));\n          }\n        });\n      } catch (error) {\n        reject(new Error(\"Error saving settings in Office environment: \" + error.message));\n      }\n    } else {\n      try {\n        localStorage.setItem(\"syncroUrl\", syncroUrl);\n        localStorage.setItem(\"syncroApiKey\", syncroApiKey);\n        resolve();\n      } catch (error) {\n        reject(new Error(\"Error saving settings in local storage: \" + error.message));\n      }\n    }\n  });\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global Office */\n\n// Declare fetch as a global for TypeScript\ndeclare const fetch: (input: RequestInfo, init?: RequestInit) => Promise<Response>;\n\nimport { getSyncroSettings, saveSyncroSettings } from \"../settings/settings\";\n\ninterface EmailInfo {\n  subject: string;\n  content: string;\n  senderEmail: string;\n  senderName: string;\n}\n\ninterface SyncroCustomer {\n  id: number;\n  name: string;\n}\n\ninterface SyncroContact {\n  id: number;\n  name: string;\n}\n\ninterface SyncroAsset {\n  id: number;\n  name: string;\n}\n\nlet syncroApiKey: string;\nlet syncroUrl: string;\n\n// Function to initialize the app\nfunction initializeApp() {\n  console.log(\"Syncro Ticket Creator: initializeApp called\");\n  loadSyncroSettings();\n  document.getElementById(\"create-ticket\")!.onclick = createTicket;\n}\n\nif (typeof Office !== \"undefined\") {\n  console.log(\"Syncro Ticket Creator: Office environment detected\");\n  Office.onReady((info: { host: Office.HostType; platform: Office.PlatformType }) => {\n    console.log(\"Syncro Ticket Creator: Office.onReady called\", info);\n    if (info.host === Office.HostType.Outlook) {\n      document.addEventListener(\"DOMContentLoaded\", initializeApp); // Ensure DOM is fully loaded\n    }\n  });\n} else {\n  console.log(\"Syncro Ticket Creator: Non-Office environment detected\");\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    console.log(\"Syncro Ticket Creator: DOMContentLoaded event fired\");\n    initializeApp();\n  });\n}\n\nasync function loadSyncroSettings() {\n  console.log(\"Syncro Ticket Creator: loadSyncroSettings called\");\n  const settings = getSyncroSettings();\n  console.log(\"Retrieved settings:\", settings);\n  syncroApiKey = settings.syncroApiKey;\n  syncroUrl = settings.syncroUrl;\n\n  showSettingsUI();\n}\n\nfunction showSettingsUI() {\n  console.log(\"Syncro Ticket Creator: showSettingsUI called\");\n  const appBody = document.getElementById(\"app-body\");\n  if (appBody) {\n    console.log(\"Syncro Ticket Creator: app-body element found\");\n    appBody.innerHTML = `\n      <h2>Syncro API Settings</h2>\n      <div class=\"ms-TextField\">\n        <label class=\"ms-Label\" for=\"syncro-url\">Syncro URL</label>\n        <input type=\"text\" id=\"syncro-url\" class=\"ms-TextField-field\" value=\"${syncroUrl || \"\"}\" required />\n      </div>\n      <div class=\"ms-TextField\">\n        <label class=\"ms-Label\" for=\"syncro-api-key\">Syncro API Key</label>\n        <input type=\"password\" id=\"syncro-api-key\" class=\"ms-TextField-field\" value=\"${syncroApiKey || \"\"}\" required />\n      </div>\n      <div class=\"ms-TextField\">\n        <button id=\"save-settings\" class=\"ms-Button ms-Button--primary\">\n          <span class=\"ms-Button-label\">Save Settings</span>\n        </button>\n        <button id=\"test-api-settings\" class=\"ms-Button ms-Button--secondary\">\n          <span class=\"ms-Button-label\">Test API Settings</span>\n        </button>\n      </div>\n    `;\n    document.getElementById(\"save-settings\")!.onclick = saveSettings;\n    document.getElementById(\"test-api-settings\")!.onclick = testApiSettings;\n    console.log(\"Syncro Ticket Creator: Settings UI rendered\");\n  } else {\n    console.error(\"Syncro Ticket Creator: Element with id 'app-body' not found\");\n  }\n}\n\nasync function saveSettings() {\n  console.log(\"Syncro Ticket Creator: saveSettings called\");\n  const newSyncroUrl = (document.getElementById(\"syncro-url\") as HTMLInputElement).value;\n  const newSyncroApiKey = (document.getElementById(\"syncro-api-key\") as HTMLInputElement).value;\n\n  if (!newSyncroUrl || !newSyncroApiKey) {\n    showStatus(\"Please enter both Syncro URL and API Key.\", \"error\");\n    return;\n  }\n\n  try {\n    await saveSyncroSettings(newSyncroUrl, newSyncroApiKey);\n    syncroUrl = newSyncroUrl;\n    syncroApiKey = newSyncroApiKey;\n    showStatus(\"Settings saved successfully. Initializing app...\", \"success\");\n    await verifyApiSettings();\n    await populateCustomers();\n    hideStatus();\n  } catch (error) {\n    console.error(\"Error saving settings:\", error);\n    showStatus(\"Failed to save settings. Please try again.\", \"error\");\n  }\n}\n\n// New function to test API settings\nasync function testApiSettings() {\n  console.log(\"Syncro Ticket Creator: testApiSettings called\");\n  const testSyncroUrl = (document.getElementById(\"syncro-url\") as HTMLInputElement).value;\n  const testSyncroApiKey = (document.getElementById(\"syncro-api-key\") as HTMLInputElement).value;\n\n  if (!testSyncroUrl || !testSyncroApiKey) {\n    showStatus(\"Please enter both Syncro URL and API Key.\", \"error\");\n    return;\n  }\n\n  try {\n    const response = await fetch(`${testSyncroUrl}/api/v1/customers`, {\n      headers: {\n        Authorization: `Bearer ${testSyncroApiKey}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to verify API settings. Please check your Syncro URL and API Key.\");\n    }\n\n    const customers = await response.json();\n    console.log(\"Syncro Ticket Creator: API settings verified successfully\", customers);\n    showStatus(\"API settings verified successfully!\", \"success\");\n  } catch (error) {\n    console.error(\"Error verifying API settings:\", error);\n    showStatus(\"Failed to verify API settings. Please try again.\", \"error\");\n  }\n}\n\nasync function verifyApiSettings() {\n  console.log(\"Syncro Ticket Creator: verifyApiSettings called\");\n  try {\n    await fetchSyncroCustomers();\n  } catch (error) {\n    console.error(\"Error verifying API settings:\", error);\n    throw new Error(\"Invalid API settings. Please check your Syncro URL and API Key.\");\n  }\n}\n\nasync function populateCustomers() {\n  console.log(\"Syncro Ticket Creator: populateCustomers called\");\n  try {\n    const customers = await fetchSyncroCustomers();\n    const customerSelect = document.getElementById(\"customer-select\") as HTMLSelectElement;\n    if (!customerSelect) {\n      console.error(\"Syncro Ticket Creator: Element with id 'customer-select' not found\");\n      return;\n    }\n    customerSelect.innerHTML = '<option value=\"\">Select a customer</option>';\n    customers.forEach((customer) => {\n      const option = document.createElement(\"option\");\n      option.value = customer.id.toString();\n      option.textContent = sanitizeHtml(customer.name);\n      customerSelect.appendChild(option);\n    });\n    customerSelect.onchange = populateContacts;\n  } catch (error) {\n    console.error(\"Error populating customers:\", error);\n    showStatus(\"Failed to load customers. Please check your Syncro settings.\", \"error\");\n    throw error;\n  }\n}\n\nasync function populateContacts() {\n  console.log(\"Syncro Ticket Creator: populateContacts called\");\n  try {\n    showStatus(\"Loading contacts...\");\n    const customerId = (document.getElementById(\"customer-select\") as HTMLSelectElement).value;\n    const contacts = await fetchSyncroContacts(parseInt(customerId));\n    const contactSelect = document.getElementById(\"contact-select\") as HTMLSelectElement;\n    if (!contactSelect) {\n      console.error(\"Syncro Ticket Creator: Element with id 'contact-select' not found\");\n      return;\n    }\n    contactSelect.innerHTML = '<option value=\"\">Select a contact</option>';\n    contacts.forEach((contact) => {\n      const option = document.createElement(\"option\");\n      option.value = contact.id.toString();\n      option.textContent = sanitizeHtml(contact.name);\n      contactSelect.appendChild(option);\n    });\n    hideStatus();\n    populateAssets();\n  } catch (error) {\n    console.error(\"Error populating contacts:\", error);\n    showStatus(\"Failed to load contacts. Please try again.\", \"error\");\n  }\n}\n\nasync function populateAssets() {\n  console.log(\"Syncro Ticket Creator: populateAssets called\");\n  try {\n    showStatus(\"Loading assets...\");\n    const customerId = (document.getElementById(\"customer-select\") as HTMLSelectElement).value;\n    const assets = await fetchSyncroAssets(parseInt(customerId));\n    const assetSelect = document.getElementById(\"asset-select\") as HTMLSelectElement;\n    if (!assetSelect) {\n      console.error(\"Syncro Ticket Creator: Element with id 'asset-select' not found\");\n      return;\n    }\n    assetSelect.innerHTML = '<option value=\"\">Select an asset</option>';\n    assets.forEach((asset) => {\n      const option = document.createElement(\"option\");\n      option.value = asset.id.toString();\n      option.textContent = sanitizeHtml(asset.name);\n      assetSelect.appendChild(option);\n    });\n    hideStatus();\n  } catch (error) {\n    console.error(\"Error populating assets:\", error);\n    showStatus(\"Failed to load assets. Please try again.\", \"error\");\n  }\n}\n\nasync function createTicket(): Promise<void> {\n  console.log(\"Syncro Ticket Creator: createTicket called\");\n  try {\n    showStatus(\"Creating ticket...\");\n    const emailInfo = await getEmailInfo();\n    const customerId = (document.getElementById(\"customer-select\") as HTMLSelectElement).value;\n    const contactId = (document.getElementById(\"contact-select\") as HTMLSelectElement).value;\n    const assetId = (document.getElementById(\"asset-select\") as HTMLSelectElement).value;\n    const ticketTitle = (document.getElementById(\"ticket-title\") as HTMLInputElement).value || emailInfo.subject;\n    const ticketMessage = (document.getElementById(\"ticket-message\") as HTMLTextAreaElement).value || emailInfo.content;\n\n    const ticketData = {\n      customer_id: parseInt(customerId),\n      contact_id: parseInt(contactId),\n      asset_id: assetId ? parseInt(assetId) : null,\n      subject: ticketTitle,\n      problem_type: \"Other\",\n      status: \"New\",\n      comment: ticketMessage,\n    };\n\n    const createdTicket = await createSyncroTicket(ticketData);\n    console.log(\"Ticket created:\", createdTicket);\n    showStatus(\"Ticket created successfully!\", \"success\");\n  } catch (error) {\n    console.error(\"Error creating ticket:\", error);\n    showStatus(\"Failed to create ticket. Please try again.\", \"error\");\n  }\n}\n\nasync function getEmailInfo(): Promise<EmailInfo> {\n  console.log(\"Syncro Ticket Creator: getEmailInfo called\");\n  return new Promise((resolve) => {\n    if (typeof Office !== \"undefined\" && Office.context && Office.context.mailbox) {\n      const item = Office.context.mailbox.item;\n      const emailInfo: EmailInfo = {\n        subject: item?.subject || \"\",\n        content: \"\",\n        senderEmail: item?.from?.emailAddress || \"\",\n        senderName: item?.from?.displayName || \"\",\n      };\n\n      item?.body.getAsync(Office.CoercionType.Text, (result) => {\n        if (result.status === Office.AsyncResultStatus.Succeeded) {\n          emailInfo.content = result.value;\n        }\n        resolve(emailInfo);\n      });\n    } else {\n      resolve({\n        subject: \"\",\n        content: \"\",\n        senderEmail: \"\",\n        senderName: \"\",\n      });\n    }\n  });\n}\n\n// Syncro API functions\nasync function fetchSyncroCustomers(): Promise<SyncroCustomer[]> {\n  console.log(\"Syncro Ticket Creator: fetchSyncroCustomers called\");\n  const response = await fetch(`${syncroUrl}/api/v1/customers`, {\n    headers: {\n      Authorization: `Bearer ${syncroApiKey}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch customers\");\n  }\n  return response.json();\n}\n\nasync function fetchSyncroContacts(customerId: number): Promise<SyncroContact[]> {\n  console.log(\"Syncro Ticket Creator: fetchSyncroContacts called\");\n  const response = await fetch(`${syncroUrl}/api/v1/customers/${customerId}/contacts`, {\n    headers: {\n      Authorization: `Bearer ${syncroApiKey}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch contacts\");\n  }\n  return response.json();\n}\n\nasync function fetchSyncroAssets(customerId: number): Promise<SyncroAsset[]> {\n  console.log(\"Syncro Ticket Creator: fetchSyncroAssets called\");\n  const response = await fetch(`${syncroUrl}/api/v1/customers/${customerId}/assets`, {\n    headers: {\n      Authorization: `Bearer ${syncroApiKey}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch assets\");\n  }\n  return response.json();\n}\n\nasync function createSyncroTicket(ticketData: any): Promise<any> {\n  console.log(\"Syncro Ticket Creator: createSyncroTicket called\");\n  const response = await fetch(`${syncroUrl}/api/v1/tickets`, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${syncroApiKey}`,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(ticketData),\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to create ticket\");\n  }\n  return response.json();\n}\n\nfunction showStatus(message: string, type: \"info\" | \"error\" | \"success\" = \"info\") {\n  console.log(`Syncro Ticket Creator: showStatus called - ${type}: ${message}`);\n  const statusElement = document.getElementById(\"status-message\");\n  if (!statusElement) {\n    const newStatusElement = document.createElement(\"div\");\n    newStatusElement.id = \"status-message\";\n    document.body.insertBefore(newStatusElement, document.body.firstChild);\n  }\n  const element = statusElement || document.getElementById(\"status-message\")!;\n  element.textContent = sanitizeHtml(message);\n  element.className = `status-message ${type}`;\n  element.style.display = \"block\";\n}\n\nfunction hideStatus() {\n  console.log(\"Syncro Ticket Creator: hideStatus called\");\n  const statusElement = document.getElementById(\"status-message\");\n  if (statusElement) {\n    statusElement.style.display = \"none\";\n  }\n}\n\nfunction sanitizeHtml(input: string): string {\n  const div = document.createElement(\"div\");\n  div.textContent = input;\n  return div.innerHTML;\n}\n"],"names":["___HTML_LOADER_IMPORT_0___","___HTML_LOADER_IMPORT_1___","module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","observer","MutationObserver","mutations","forEach","mutation","type","addedNodes","saveSettingsButton","getElementById","addEventListener","saveSettings","console","log","error","attachSaveSettingsListener","disconnect","async","syncroUrl","value","syncroApiKey","saveSyncroSettings","close","alert","message","Promise","resolve","reject","Office","context","roamingSettings","set","saveAsync","result","status","AsyncResultStatus","Succeeded","JSON","stringify","localStorage","setItem","initializeApp","settings","getItem","getSyncroSettings","appBody","innerHTML","onclick","testApiSettings","showSettingsUI","loadSyncroSettings","createTicket","newSyncroUrl","newSyncroApiKey","showStatus","fetchSyncroCustomers","verifyApiSettings","customers","customerSelect","customer","option","createElement","id","toString","textContent","sanitizeHtml","name","appendChild","onchange","populateContacts","populateCustomers","hideStatus","testSyncroUrl","testSyncroApiKey","response","fetch","headers","Authorization","ok","json","customerId","contacts","fetchSyncroContacts","parseInt","contactSelect","contact","assets","fetchSyncroAssets","assetSelect","asset","populateAssets","emailInfo","mailbox","item","subject","content","senderEmail","from","emailAddress","senderName","displayName","body","getAsync","CoercionType","Text","getEmailInfo","contactId","assetId","ticketTitle","ticketMessage","ticketData","customer_id","contact_id","asset_id","problem_type","comment","createdTicket","method","createSyncroTicket","statusElement","newStatusElement","insertBefore","firstChild","element","className","style","display","input","div","observe","childList","subtree","onReady","info","host","HostType","Outlook","URL"],"sourceRoot":""}