{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/./src/taskpane/taskpane.html","webpack://office-addin-taskpane/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/compat get default export","webpack://office-addin-taskpane/webpack/runtime/define property getters","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/./src/settings/settings.ts","webpack://office-addin-taskpane/./src/taskpane/taskpane.ts"],"sourcesContent":["// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/logo-filled.png\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"/> <title>Syncro Ticket Creator</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <img width=\\\"90\\\" height=\\\"90\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\" alt=\\\"Syncro\\\" title=\\\"Syncro\\\"/> <h1 class=\\\"ms-font-su\\\">Syncro Ticket Creator</h1> </header> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\"> <form id=\\\"ticket-form\\\"> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"customer-select\\\">Syncro Customer</label> <select id=\\\"customer-select\\\" class=\\\"ms-Dropdown\\\" required aria-label=\\\"Select Syncro Customer\\\"> <option value=\\\"\\\">Select a customer</option> </select> </div> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"contact-select\\\">Contact</label> <select id=\\\"contact-select\\\" class=\\\"ms-Dropdown\\\" required aria-label=\\\"Select Contact\\\"> <option value=\\\"\\\">Select a contact</option> </select> </div> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"asset-select\\\">Asset (Optional)</label> <select id=\\\"asset-select\\\" class=\\\"ms-Dropdown\\\" aria-label=\\\"Select Asset\\\"> <option value=\\\"\\\">Select an asset</option> </select> </div> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"ticket-title\\\">Ticket Title</label> <input type=\\\"text\\\" id=\\\"ticket-title\\\" class=\\\"ms-TextField-field\\\" required/> </div> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"ticket-message\\\">Ticket Message</label> <textarea id=\\\"ticket-message\\\" class=\\\"ms-TextField-field\\\" rows=\\\"5\\\" required></textarea> </div> <div class=\\\"ms-TextField\\\"> <button id=\\\"create-ticket\\\" class=\\\"ms-Button ms-Button--primary\\\"> <span class=\\\"ms-Button-label\\\">Create Ticket</span> </button> </div> </form> </main> </body> </html> \";\n// Exports\nexport default code;","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global Office */\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Outlook) {\n    document.getElementById(\"save-settings\")!.onclick = saveSettings;\n    loadSettings();\n  }\n});\n\nfunction saveSettings() {\n  const syncroUrl = (document.getElementById(\"syncro-url\") as HTMLInputElement).value;\n  const syncroApiKey = (document.getElementById(\"syncro-api-key\") as HTMLInputElement).value;\n\n  saveSyncroSettings(syncroUrl, syncroApiKey)\n    .then(() => {\n      console.log(\"Settings saved successfully\");\n      // TODO: Show success message to user\n    })\n    .catch((error) => {\n      console.error(\"Error saving settings:\", error);\n      // TODO: Show error message to user\n    });\n}\n\nfunction loadSettings() {\n  const syncroUrl = Office.context.roamingSettings.get(\"syncroUrl\");\n  const syncroApiKey = Office.context.roamingSettings.get(\"syncroApiKey\");\n\n  if (syncroUrl) {\n    (document.getElementById(\"syncro-url\") as HTMLInputElement).value = syncroUrl;\n  }\n  if (syncroApiKey) {\n    (document.getElementById(\"syncro-api-key\") as HTMLInputElement).value = syncroApiKey;\n  }\n}\n\n// Export functions to be used in other files\nexport function getSyncroSettings(): { syncroUrl: string; syncroApiKey: string } {\n  const syncroUrl = Office.context.roamingSettings.get(\"syncroUrl\") as string;\n  const syncroApiKey = Office.context.roamingSettings.get(\"syncroApiKey\") as string;\n  return { syncroUrl, syncroApiKey };\n}\n\nexport function saveSyncroSettings(syncroUrl: string, syncroApiKey: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    Office.context.roamingSettings.set(\"syncroUrl\", syncroUrl);\n    Office.context.roamingSettings.set(\"syncroApiKey\", syncroApiKey);\n    Office.context.roamingSettings.saveAsync((result) => {\n      if (result.status === Office.AsyncResultStatus.Succeeded) {\n        resolve();\n      } else {\n        reject(result.error);\n      }\n    });\n  });\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global Office */\n\n// Declare fetch as a global for TypeScript\ndeclare const fetch: (input: RequestInfo, init?: RequestInit) => Promise<Response>;\n\nimport { getSyncroSettings, saveSyncroSettings } from \"../settings/settings\";\n\n// Define environment-based configuration\nconst BASE_URL = \"https://drewrox2009.github.io/syncro_ticket_creator\";\n\ninterface EmailInfo {\n  subject: string;\n  content: string;\n  senderEmail: string;\n  senderName: string;\n}\n\ninterface SyncroCustomer {\n  id: number;\n  name: string;\n}\n\ninterface SyncroContact {\n  id: number;\n  name: string;\n}\n\ninterface SyncroAsset {\n  id: number;\n  name: string;\n}\n\nlet syncroApiKey: string;\nlet syncroUrl: string;\n\nOffice.onReady((info: { host: Office.HostType; platform: Office.PlatformType }) => {\n  if (info.host === Office.HostType.Outlook) {\n    document.getElementById(\"create-ticket\")!.onclick = createTicket;\n    loadSyncroSettings();\n  }\n});\n\nasync function loadSyncroSettings() {\n  const settings = getSyncroSettings();\n  console.log(\"Retrieved settings:\", settings); // Add this line for debugging\n  syncroApiKey = settings.syncroApiKey;\n  syncroUrl = settings.syncroUrl;\n\n  if (!syncroApiKey || !syncroUrl) {\n    showSettingsUI();\n  } else {\n    try {\n      showStatus(\"Verifying API settings...\");\n      await verifyApiSettings();\n      showStatus(\"Loading customers...\");\n      await populateCustomers();\n      hideStatus();\n    } catch (error) {\n      console.error(\"Error initializing app:\", error);\n      showStatus(\"Failed to initialize app. Please check your Syncro settings.\", \"error\");\n      showSettingsUI();\n    }\n  }\n}\n\nfunction showSettingsUI() {\n  document.getElementById(\"app-body\")!.innerHTML = `\n    <h2>Syncro API Settings</h2>\n    <div class=\"ms-TextField\">\n      <label class=\"ms-Label\" for=\"syncro-url\">Syncro URL</label>\n      <input type=\"text\" id=\"syncro-url\" class=\"ms-TextField-field\" value=\"${syncroUrl || \"\"}\" required />\n    </div>\n    <div class=\"ms-TextField\">\n      <label class=\"ms-Label\" for=\"syncro-api-key\">Syncro API Key</label>\n      <input type=\"password\" id=\"syncro-api-key\" class=\"ms-TextField-field\" value=\"${syncroApiKey || \"\"}\" required />\n    </div>\n    <div class=\"ms-TextField\">\n      <button id=\"save-settings\" class=\"ms-Button ms-Button--primary\">\n        <span class=\"ms-Button-label\">Save Settings</span>\n      </button>\n    </div>\n  `;\n  document.getElementById(\"save-settings\")!.onclick = saveSettings;\n}\n\nasync function saveSettings() {\n  const newSyncroUrl = (document.getElementById(\"syncro-url\") as HTMLInputElement).value;\n  const newSyncroApiKey = (document.getElementById(\"syncro-api-key\") as HTMLInputElement).value;\n\n  if (!newSyncroUrl || !newSyncroApiKey) {\n    showStatus(\"Please enter both Syncro URL and API Key.\", \"error\");\n    return;\n  }\n\n  try {\n    await saveSyncroSettings(newSyncroUrl, newSyncroApiKey);\n    syncroUrl = newSyncroUrl;\n    syncroApiKey = newSyncroApiKey;\n    showStatus(\"Settings saved successfully. Initializing app...\", \"success\");\n    await verifyApiSettings();\n    await populateCustomers();\n    hideStatus();\n  } catch (error) {\n    console.error(\"Error saving settings:\", error);\n    showStatus(\"Failed to save settings. Please try again.\", \"error\");\n  }\n}\n\nasync function verifyApiSettings() {\n  try {\n    await fetchSyncroCustomers();\n  } catch (error) {\n    console.error(\"Error verifying API settings:\", error);\n    throw new Error(\"Invalid API settings. Please check your Syncro URL and API Key.\");\n  }\n}\n\nfunction openSettings() {\n  Office.context.ui.displayDialogAsync(\n    `${BASE_URL}/settings/settings.html`,\n    { height: 60, width: 30, displayInIframe: true },\n    (result) => {\n      if (result.status === Office.AsyncResultStatus.Failed) {\n        console.error(\"Failed to open settings dialog:\", result.error);\n        showStatus(\"Failed to open settings. Please try again.\", \"error\");\n      }\n    }\n  );\n}\n\nasync function populateCustomers() {\n  try {\n    const customers = await fetchSyncroCustomers();\n    const customerSelect = document.getElementById(\"customer-select\") as HTMLSelectElement;\n    customerSelect.innerHTML = '<option value=\"\">Select a customer</option>';\n    customers.forEach((customer) => {\n      const option = document.createElement(\"option\");\n      option.value = customer.id.toString();\n      option.textContent = sanitizeHtml(customer.name);\n      customerSelect.appendChild(option);\n    });\n    customerSelect.onchange = populateContacts;\n  } catch (error) {\n    console.error(\"Error populating customers:\", error);\n    showStatus(\"Failed to load customers. Please check your Syncro settings.\", \"error\");\n    throw error; // Rethrow the error to be caught by the caller\n  }\n}\n\nasync function populateContacts() {\n  try {\n    showStatus(\"Loading contacts...\");\n    const customerId = (document.getElementById(\"customer-select\") as HTMLSelectElement).value;\n    const contacts = await fetchSyncroContacts(parseInt(customerId));\n    const contactSelect = document.getElementById(\"contact-select\") as HTMLSelectElement;\n    contactSelect.innerHTML = '<option value=\"\">Select a contact</option>';\n    contacts.forEach((contact) => {\n      const option = document.createElement(\"option\");\n      option.value = contact.id.toString();\n      option.textContent = sanitizeHtml(contact.name);\n      contactSelect.appendChild(option);\n    });\n    hideStatus();\n    populateAssets();\n  } catch (error) {\n    console.error(\"Error populating contacts:\", error);\n    showStatus(\"Failed to load contacts. Please try again.\", \"error\");\n  }\n}\n\nasync function populateAssets() {\n  try {\n    showStatus(\"Loading assets...\");\n    const customerId = (document.getElementById(\"customer-select\") as HTMLSelectElement).value;\n    const assets = await fetchSyncroAssets(parseInt(customerId));\n    const assetSelect = document.getElementById(\"asset-select\") as HTMLSelectElement;\n    assetSelect.innerHTML = '<option value=\"\">Select an asset</option>';\n    assets.forEach((asset) => {\n      const option = document.createElement(\"option\");\n      option.value = asset.id.toString();\n      option.textContent = sanitizeHtml(asset.name);\n      assetSelect.appendChild(option);\n    });\n    hideStatus();\n  } catch (error) {\n    console.error(\"Error populating assets:\", error);\n    showStatus(\"Failed to load assets. Please try again.\", \"error\");\n  }\n}\n\nasync function createTicket(): Promise<void> {\n  try {\n    showStatus(\"Creating ticket...\");\n    const emailInfo = await getEmailInfo();\n    const customerId = (document.getElementById(\"customer-select\") as HTMLSelectElement).value;\n    const contactId = (document.getElementById(\"contact-select\") as HTMLSelectElement).value;\n    const assetId = (document.getElementById(\"asset-select\") as HTMLSelectElement).value;\n    const ticketTitle = (document.getElementById(\"ticket-title\") as HTMLInputElement).value || emailInfo.subject;\n    const ticketMessage = (document.getElementById(\"ticket-message\") as HTMLTextAreaElement).value || emailInfo.content;\n\n    const ticketData = {\n      customer_id: parseInt(customerId),\n      contact_id: parseInt(contactId),\n      asset_id: assetId ? parseInt(assetId) : null,\n      subject: ticketTitle,\n      problem_type: \"Other\",\n      status: \"New\",\n      comment: ticketMessage,\n    };\n\n    const createdTicket = await createSyncroTicket(ticketData);\n    console.log(\"Ticket created:\", createdTicket);\n    showStatus(\"Ticket created successfully!\", \"success\");\n  } catch (error) {\n    console.error(\"Error creating ticket:\", error);\n    showStatus(\"Failed to create ticket. Please try again.\", \"error\");\n  }\n}\n\nasync function getEmailInfo(): Promise<EmailInfo> {\n  return new Promise((resolve) => {\n    const item = Office.context.mailbox.item;\n    const emailInfo: EmailInfo = {\n      subject: item?.subject || \"\",\n      content: \"\",\n      senderEmail: item?.from?.emailAddress || \"\",\n      senderName: item?.from?.displayName || \"\",\n    };\n\n    item?.body.getAsync(Office.CoercionType.Text, (result) => {\n      if (result.status === Office.AsyncResultStatus.Succeeded) {\n        emailInfo.content = result.value;\n      }\n      resolve(emailInfo);\n    });\n  });\n}\n\n// Syncro API functions\nasync function fetchSyncroCustomers(): Promise<SyncroCustomer[]> {\n  const response = await fetch(`${syncroUrl}/api/v1/customers`, {\n    headers: {\n      Authorization: `Bearer ${syncroApiKey}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch customers\");\n  }\n  return response.json();\n}\n\nasync function fetchSyncroContacts(customerId: number): Promise<SyncroContact[]> {\n  const response = await fetch(`${syncroUrl}/api/v1/customers/${customerId}/contacts`, {\n    headers: {\n      Authorization: `Bearer ${syncroApiKey}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch contacts\");\n  }\n  return response.json();\n}\n\nasync function fetchSyncroAssets(customerId: number): Promise<SyncroAsset[]> {\n  const response = await fetch(`${syncroUrl}/api/v1/customers/${customerId}/assets`, {\n    headers: {\n      Authorization: `Bearer ${syncroApiKey}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch assets\");\n  }\n  return response.json();\n}\n\nasync function createSyncroTicket(ticketData: any): Promise<any> {\n  const response = await fetch(`${syncroUrl}/api/v1/tickets`, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${syncroApiKey}`,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(ticketData),\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to create ticket\");\n  }\n  return response.json();\n}\n\nfunction showStatus(message: string, type: \"info\" | \"error\" | \"success\" = \"info\") {\n  const statusElement = document.getElementById(\"status-message\");\n  if (!statusElement) {\n    const newStatusElement = document.createElement(\"div\");\n    newStatusElement.id = \"status-message\";\n    document.body.insertBefore(newStatusElement, document.body.firstChild);\n  }\n  const element = statusElement || document.getElementById(\"status-message\")!;\n  element.textContent = sanitizeHtml(message);\n  element.className = `status-message ${type}`;\n  element.style.display = \"block\";\n}\n\nfunction hideStatus() {\n  const statusElement = document.getElementById(\"status-message\");\n  if (statusElement) {\n    statusElement.style.display = \"none\";\n  }\n}\n\n// Simple HTML sanitization function\nfunction sanitizeHtml(input: string): string {\n  const div = document.createElement(\"div\");\n  div.textContent = input;\n  return div.innerHTML;\n}\n"],"names":["___HTML_LOADER_IMPORT_0___","___HTML_LOADER_IMPORT_1___","module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","saveSettings","saveSyncroSettings","getElementById","value","then","console","log","catch","error","syncroUrl","syncroApiKey","Promise","resolve","reject","Office","context","roamingSettings","set","saveAsync","result","status","AsyncResultStatus","Succeeded","showSettingsUI","innerHTML","onclick","async","newSyncroUrl","newSyncroApiKey","showStatus","verifyApiSettings","populateCustomers","hideStatus","fetchSyncroCustomers","customers","customerSelect","forEach","customer","option","createElement","id","toString","textContent","sanitizeHtml","name","appendChild","onchange","populateContacts","customerId","contacts","response","fetch","headers","Authorization","ok","json","fetchSyncroContacts","parseInt","contactSelect","contact","assets","fetchSyncroAssets","assetSelect","asset","populateAssets","createTicket","emailInfo","item","mailbox","subject","content","senderEmail","from","emailAddress","senderName","displayName","body","getAsync","CoercionType","Text","getEmailInfo","contactId","assetId","ticketTitle","ticketMessage","ticketData","customer_id","contact_id","asset_id","problem_type","comment","createdTicket","method","JSON","stringify","createSyncroTicket","message","type","statusElement","newStatusElement","insertBefore","firstChild","element","className","style","display","input","div","onReady","info","host","HostType","Outlook","loadSettings","settings","loadSyncroSettings","URL"],"sourceRoot":""}