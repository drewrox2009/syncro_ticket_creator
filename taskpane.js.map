{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/./src/taskpane/taskpane.html","webpack://office-addin-taskpane/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/compat get default export","webpack://office-addin-taskpane/webpack/runtime/define property getters","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/./src/settings/settings.ts","webpack://office-addin-taskpane/./src/taskpane/taskpane.ts"],"sourcesContent":["// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/logo-filled.png\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"/> <title>Syncro Ticket Creator</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <img width=\\\"90\\\" height=\\\"90\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\" alt=\\\"Syncro\\\" title=\\\"Syncro\\\"/> <h1 class=\\\"ms-font-su\\\">Syncro Ticket Creator</h1> </header> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\"> <form id=\\\"ticket-form\\\"> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"customer-select\\\">Syncro Customer</label> <select id=\\\"customer-select\\\" class=\\\"ms-Dropdown\\\" required aria-label=\\\"Select Syncro Customer\\\"> <option value=\\\"\\\">Select a customer</option> </select> </div> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"contact-select\\\">Contact</label> <select id=\\\"contact-select\\\" class=\\\"ms-Dropdown\\\" required aria-label=\\\"Select Contact\\\"> <option value=\\\"\\\">Select a contact</option> </select> </div> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"asset-select\\\">Asset (Optional)</label> <select id=\\\"asset-select\\\" class=\\\"ms-Dropdown\\\" aria-label=\\\"Select Asset\\\"> <option value=\\\"\\\">Select an asset</option> </select> </div> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"ticket-title\\\">Ticket Title</label> <input type=\\\"text\\\" id=\\\"ticket-title\\\" class=\\\"ms-TextField-field\\\" required/> </div> <div class=\\\"ms-TextField\\\"> <label class=\\\"ms-Label\\\" for=\\\"ticket-message\\\">Ticket Message</label> <textarea id=\\\"ticket-message\\\" class=\\\"ms-TextField-field\\\" rows=\\\"5\\\" required></textarea> </div> <div class=\\\"ms-TextField\\\"> <button id=\\\"create-ticket\\\" class=\\\"ms-Button ms-Button--primary\\\"> <span class=\\\"ms-Button-label\\\">Create Ticket</span> </button> </div> </form> </main> </body> </html> \";\n// Exports\nexport default code;","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global Office */\n\nOffice.onReady((info) => {\n  console.log(\"settings.ts: Office.onReady called\", info);\n  if (info.host === Office.HostType.Outlook) {\n    loadSettings();\n    const saveSettingsButton = document.getElementById(\"save-settings\");\n    if (saveSettingsButton) {\n      saveSettingsButton.addEventListener(\"click\", saveSettings);\n      console.log(\"settings.ts: Event listener attached to save-settings button\");\n    } else {\n      console.error(\"settings.ts: Element with id 'save-settings' not found\");\n    }\n  }\n});\n\nfunction saveSettings() {\n  console.log(\"settings.ts: saveSettings called\");\n  const syncroUrl = (document.getElementById(\"syncro-url\") as HTMLInputElement).value;\n  const syncroApiKey = (document.getElementById(\"syncro-api-key\") as HTMLInputElement).value;\n\n  saveSyncroSettings(syncroUrl, syncroApiKey)\n    .then(() => {\n      console.log(\"settings.ts: Settings saved successfully\");\n      // TODO: Show success message to user\n    })\n    .catch((error) => {\n      console.error(\"settings.ts: Error saving settings:\", error);\n      // TODO: Show error message to user\n    });\n}\n\nfunction loadSettings() {\n  console.log(\"settings.ts: loadSettings called\");\n  const syncroUrl = getSyncroSettings().syncroUrl;\n  const syncroApiKey = getSyncroSettings().syncroApiKey;\n\n  if (syncroUrl) {\n    (document.getElementById(\"syncro-url\") as HTMLInputElement).value = syncroUrl;\n  }\n  if (syncroApiKey) {\n    (document.getElementById(\"syncro-api-key\") as HTMLInputElement).value = syncroApiKey;\n  }\n}\n\n// Export functions to be used in other files\nexport function getSyncroSettings(): { syncroUrl: string; syncroApiKey: string } {\n  console.log(\"settings.ts: getSyncroSettings called\");\n  let syncroUrl = \"\";\n  let syncroApiKey = \"\";\n\n  if (typeof Office !== \"undefined\" && Office.context && Office.context.roamingSettings) {\n    syncroUrl = (Office.context.roamingSettings.get(\"syncroUrl\") as string) || \"\";\n    syncroApiKey = (Office.context.roamingSettings.get(\"syncroApiKey\") as string) || \"\";\n  } else {\n    syncroUrl = localStorage.getItem(\"syncroUrl\") || \"\";\n    syncroApiKey = localStorage.getItem(\"syncroApiKey\") || \"\";\n  }\n\n  console.log(\"settings.ts: Retrieved settings:\", { syncroUrl, syncroApiKey });\n  return { syncroUrl, syncroApiKey };\n}\n\nexport function saveSyncroSettings(syncroUrl: string, syncroApiKey: string): Promise<void> {\n  console.log(\"settings.ts: saveSyncroSettings called\", { syncroUrl, syncroApiKey });\n  return new Promise((resolve, reject) => {\n    if (typeof Office !== \"undefined\" && Office.context && Office.context.roamingSettings) {\n      Office.context.roamingSettings.set(\"syncroUrl\", syncroUrl);\n      Office.context.roamingSettings.set(\"syncroApiKey\", syncroApiKey);\n      Office.context.roamingSettings.saveAsync((result) => {\n        if (result.status === Office.AsyncResultStatus.Succeeded) {\n          resolve();\n        } else {\n          reject(result.error);\n        }\n      });\n    } else {\n      localStorage.setItem(\"syncroUrl\", syncroUrl);\n      localStorage.setItem(\"syncroApiKey\", syncroApiKey);\n      resolve();\n    }\n  });\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global Office */\n\n// Declare fetch as a global for TypeScript\ndeclare const fetch: (input: RequestInfo, init?: RequestInit) => Promise<Response>;\n\nimport { getSyncroSettings, saveSyncroSettings } from \"../settings/settings\";\n\ninterface EmailInfo {\n  subject: string;\n  content: string;\n  senderEmail: string;\n  senderName: string;\n}\n\ninterface SyncroCustomer {\n  id: number;\n  name: string;\n}\n\ninterface SyncroContact {\n  id: number;\n  name: string;\n}\n\ninterface SyncroAsset {\n  id: number;\n  name: string;\n}\n\nlet syncroApiKey: string;\nlet syncroUrl: string;\n\n// Function to initialize the app\nfunction initializeApp() {\n  console.log(\"Syncro Ticket Creator: initializeApp called\");\n  document.getElementById(\"create-ticket\")!.onclick = createTicket;\n  loadSyncroSettings();\n}\n\n// Check if we're in an Office environment\nif (typeof Office !== \"undefined\") {\n  console.log(\"Syncro Ticket Creator: Office environment detected\");\n  Office.onReady((info: { host: Office.HostType; platform: Office.PlatformType }) => {\n    console.log(\"Syncro Ticket Creator: Office.onReady called\", info);\n    if (info.host === Office.HostType.Outlook) {\n      initializeApp();\n    }\n  });\n} else {\n  console.log(\"Syncro Ticket Creator: Non-Office environment detected\");\n  // If we're not in an Office environment, initialize the app directly\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    console.log(\"Syncro Ticket Creator: DOMContentLoaded event fired\");\n    initializeApp();\n  });\n}\n\nasync function loadSyncroSettings() {\n  console.log(\"Syncro Ticket Creator: loadSyncroSettings called\");\n  const settings = getSyncroSettings();\n  console.log(\"Retrieved settings:\", settings);\n  syncroApiKey = settings.syncroApiKey;\n  syncroUrl = settings.syncroUrl;\n\n  // Always show the settings UI when the app is launched\n  showSettingsUI();\n}\n\nfunction showSettingsUI() {\n  console.log(\"Syncro Ticket Creator: showSettingsUI called\");\n  const appBody = document.getElementById(\"app-body\");\n  if (appBody) {\n    console.log(\"Syncro Ticket Creator: app-body element found\");\n    console.log(\"Syncro Ticket Creator: syncroUrl:\", syncroUrl);\n    console.log(\"Syncro Ticket Creator: syncroApiKey:\", syncroApiKey);\n    appBody.innerHTML = `\n      <h2>Syncro API Settings</h2>\n      <div class=\"ms-TextField\">\n        <label class=\"ms-Label\" for=\"syncro-url\">Syncro URL</label>\n        <input type=\"text\" id=\"syncro-url\" class=\"ms-TextField-field\" value=\"${syncroUrl || \"\"}\" required />\n      </div>\n      <div class=\"ms-TextField\">\n        <label class=\"ms-Label\" for=\"syncro-api-key\">Syncro API Key</label>\n        <input type=\"password\" id=\"syncro-api-key\" class=\"ms-TextField-field\" value=\"${syncroApiKey || \"\"}\" required />\n      </div>\n      <div class=\"ms-TextField\">\n        <button id=\"save-settings\" class=\"ms-Button ms-Button--primary\">\n          <span class=\"ms-Button-label\">Save Settings</span>\n        </button>\n      </div>\n    `;\n    document.getElementById(\"save-settings\")!.onclick = saveSettings;\n    console.log(\"Syncro Ticket Creator: Settings UI rendered\");\n  } else {\n    console.error(\"Syncro Ticket Creator: Element with id 'app-body' not found\");\n  }\n}\n\nasync function saveSettings() {\n  console.log(\"Syncro Ticket Creator: saveSettings called\");\n  const newSyncroUrl = (document.getElementById(\"syncro-url\") as HTMLInputElement).value;\n  const newSyncroApiKey = (document.getElementById(\"syncro-api-key\") as HTMLInputElement).value;\n\n  if (!newSyncroUrl || !newSyncroApiKey) {\n    showStatus(\"Please enter both Syncro URL and API Key.\", \"error\");\n    return;\n  }\n\n  try {\n    await saveSyncroSettings(newSyncroUrl, newSyncroApiKey);\n    syncroUrl = newSyncroUrl;\n    syncroApiKey = newSyncroApiKey;\n    showStatus(\"Settings saved successfully. Initializing app...\", \"success\");\n    await verifyApiSettings();\n    await populateCustomers();\n    hideStatus();\n  } catch (error) {\n    console.error(\"Error saving settings:\", error);\n    showStatus(\"Failed to save settings. Please try again.\", \"error\");\n  }\n}\n\nasync function verifyApiSettings() {\n  console.log(\"Syncro Ticket Creator: verifyApiSettings called\");\n  try {\n    await fetchSyncroCustomers();\n  } catch (error) {\n    console.error(\"Error verifying API settings:\", error);\n    throw new Error(\"Invalid API settings. Please check your Syncro URL and API Key.\");\n  }\n}\n\nasync function populateCustomers() {\n  console.log(\"Syncro Ticket Creator: populateCustomers called\");\n  try {\n    const customers = await fetchSyncroCustomers();\n    const customerSelect = document.getElementById(\"customer-select\") as HTMLSelectElement;\n    customerSelect.innerHTML = '<option value=\"\">Select a customer</option>';\n    customers.forEach((customer) => {\n      const option = document.createElement(\"option\");\n      option.value = customer.id.toString();\n      option.textContent = sanitizeHtml(customer.name);\n      customerSelect.appendChild(option);\n    });\n    customerSelect.onchange = populateContacts;\n  } catch (error) {\n    console.error(\"Error populating customers:\", error);\n    showStatus(\"Failed to load customers. Please check your Syncro settings.\", \"error\");\n    throw error; // Rethrow the error to be caught by the caller\n  }\n}\n\nasync function populateContacts() {\n  console.log(\"Syncro Ticket Creator: populateContacts called\");\n  try {\n    showStatus(\"Loading contacts...\");\n    const customerId = (document.getElementById(\"customer-select\") as HTMLSelectElement).value;\n    const contacts = await fetchSyncroContacts(parseInt(customerId));\n    const contactSelect = document.getElementById(\"contact-select\") as HTMLSelectElement;\n    contactSelect.innerHTML = '<option value=\"\">Select a contact</option>';\n    contacts.forEach((contact) => {\n      const option = document.createElement(\"option\");\n      option.value = contact.id.toString();\n      option.textContent = sanitizeHtml(contact.name);\n      contactSelect.appendChild(option);\n    });\n    hideStatus();\n    populateAssets();\n  } catch (error) {\n    console.error(\"Error populating contacts:\", error);\n    showStatus(\"Failed to load contacts. Please try again.\", \"error\");\n  }\n}\n\nasync function populateAssets() {\n  console.log(\"Syncro Ticket Creator: populateAssets called\");\n  try {\n    showStatus(\"Loading assets...\");\n    const customerId = (document.getElementById(\"customer-select\") as HTMLSelectElement).value;\n    const assets = await fetchSyncroAssets(parseInt(customerId));\n    const assetSelect = document.getElementById(\"asset-select\") as HTMLSelectElement;\n    assetSelect.innerHTML = '<option value=\"\">Select an asset</option>';\n    assets.forEach((asset) => {\n      const option = document.createElement(\"option\");\n      option.value = asset.id.toString();\n      option.textContent = sanitizeHtml(asset.name);\n      assetSelect.appendChild(option);\n    });\n    hideStatus();\n  } catch (error) {\n    console.error(\"Error populating assets:\", error);\n    showStatus(\"Failed to load assets. Please try again.\", \"error\");\n  }\n}\n\nasync function createTicket(): Promise<void> {\n  console.log(\"Syncro Ticket Creator: createTicket called\");\n  try {\n    showStatus(\"Creating ticket...\");\n    const emailInfo = await getEmailInfo();\n    const customerId = (document.getElementById(\"customer-select\") as HTMLSelectElement).value;\n    const contactId = (document.getElementById(\"contact-select\") as HTMLSelectElement).value;\n    const assetId = (document.getElementById(\"asset-select\") as HTMLSelectElement).value;\n    const ticketTitle = (document.getElementById(\"ticket-title\") as HTMLInputElement).value || emailInfo.subject;\n    const ticketMessage = (document.getElementById(\"ticket-message\") as HTMLTextAreaElement).value || emailInfo.content;\n\n    const ticketData = {\n      customer_id: parseInt(customerId),\n      contact_id: parseInt(contactId),\n      asset_id: assetId ? parseInt(assetId) : null,\n      subject: ticketTitle,\n      problem_type: \"Other\",\n      status: \"New\",\n      comment: ticketMessage,\n    };\n\n    const createdTicket = await createSyncroTicket(ticketData);\n    console.log(\"Ticket created:\", createdTicket);\n    showStatus(\"Ticket created successfully!\", \"success\");\n  } catch (error) {\n    console.error(\"Error creating ticket:\", error);\n    showStatus(\"Failed to create ticket. Please try again.\", \"error\");\n  }\n}\n\nasync function getEmailInfo(): Promise<EmailInfo> {\n  console.log(\"Syncro Ticket Creator: getEmailInfo called\");\n  return new Promise((resolve) => {\n    if (typeof Office !== \"undefined\" && Office.context && Office.context.mailbox) {\n      const item = Office.context.mailbox.item;\n      const emailInfo: EmailInfo = {\n        subject: item?.subject || \"\",\n        content: \"\",\n        senderEmail: item?.from?.emailAddress || \"\",\n        senderName: item?.from?.displayName || \"\",\n      };\n\n      item?.body.getAsync(Office.CoercionType.Text, (result) => {\n        if (result.status === Office.AsyncResultStatus.Succeeded) {\n          emailInfo.content = result.value;\n        }\n        resolve(emailInfo);\n      });\n    } else {\n      // If we're not in Outlook, return empty email info\n      resolve({\n        subject: \"\",\n        content: \"\",\n        senderEmail: \"\",\n        senderName: \"\",\n      });\n    }\n  });\n}\n\n// Syncro API functions\nasync function fetchSyncroCustomers(): Promise<SyncroCustomer[]> {\n  console.log(\"Syncro Ticket Creator: fetchSyncroCustomers called\");\n  const response = await fetch(`${syncroUrl}/api/v1/customers`, {\n    headers: {\n      Authorization: `Bearer ${syncroApiKey}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch customers\");\n  }\n  return response.json();\n}\n\nasync function fetchSyncroContacts(customerId: number): Promise<SyncroContact[]> {\n  console.log(\"Syncro Ticket Creator: fetchSyncroContacts called\");\n  const response = await fetch(`${syncroUrl}/api/v1/customers/${customerId}/contacts`, {\n    headers: {\n      Authorization: `Bearer ${syncroApiKey}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch contacts\");\n  }\n  return response.json();\n}\n\nasync function fetchSyncroAssets(customerId: number): Promise<SyncroAsset[]> {\n  console.log(\"Syncro Ticket Creator: fetchSyncroAssets called\");\n  const response = await fetch(`${syncroUrl}/api/v1/customers/${customerId}/assets`, {\n    headers: {\n      Authorization: `Bearer ${syncroApiKey}`,\n    },\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch assets\");\n  }\n  return response.json();\n}\n\nasync function createSyncroTicket(ticketData: any): Promise<any> {\n  console.log(\"Syncro Ticket Creator: createSyncroTicket called\");\n  const response = await fetch(`${syncroUrl}/api/v1/tickets`, {\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${syncroApiKey}`,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(ticketData),\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to create ticket\");\n  }\n  return response.json();\n}\n\nfunction showStatus(message: string, type: \"info\" | \"error\" | \"success\" = \"info\") {\n  console.log(`Syncro Ticket Creator: showStatus called - ${type}: ${message}`);\n  const statusElement = document.getElementById(\"status-message\");\n  if (!statusElement) {\n    const newStatusElement = document.createElement(\"div\");\n    newStatusElement.id = \"status-message\";\n    document.body.insertBefore(newStatusElement, document.body.firstChild);\n  }\n  const element = statusElement || document.getElementById(\"status-message\")!;\n  element.textContent = sanitizeHtml(message);\n  element.className = `status-message ${type}`;\n  element.style.display = \"block\";\n}\n\nfunction hideStatus() {\n  console.log(\"Syncro Ticket Creator: hideStatus called\");\n  const statusElement = document.getElementById(\"status-message\");\n  if (statusElement) {\n    statusElement.style.display = \"none\";\n  }\n}\n\n// Simple HTML sanitization function\nfunction sanitizeHtml(input: string): string {\n  const div = document.createElement(\"div\");\n  div.textContent = input;\n  return div.innerHTML;\n}\n"],"names":["___HTML_LOADER_IMPORT_0___","___HTML_LOADER_IMPORT_1___","module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","saveSettings","console","log","saveSyncroSettings","getElementById","value","then","catch","error","getSyncroSettings","syncroUrl","syncroApiKey","Office","context","roamingSettings","localStorage","getItem","Promise","resolve","reject","set","saveAsync","result","status","AsyncResultStatus","Succeeded","setItem","initializeApp","onclick","createTicket","async","settings","appBody","innerHTML","showSettingsUI","loadSyncroSettings","newSyncroUrl","newSyncroApiKey","showStatus","fetchSyncroCustomers","verifyApiSettings","customers","customerSelect","forEach","customer","option","createElement","id","toString","textContent","sanitizeHtml","name","appendChild","onchange","populateContacts","populateCustomers","hideStatus","customerId","contacts","response","fetch","headers","Authorization","ok","json","fetchSyncroContacts","parseInt","contactSelect","contact","assets","fetchSyncroAssets","assetSelect","asset","populateAssets","emailInfo","mailbox","item","subject","content","senderEmail","from","emailAddress","senderName","displayName","body","getAsync","CoercionType","Text","getEmailInfo","contactId","assetId","ticketTitle","ticketMessage","ticketData","customer_id","contact_id","asset_id","problem_type","comment","createdTicket","method","JSON","stringify","createSyncroTicket","message","type","statusElement","newStatusElement","insertBefore","firstChild","element","className","style","display","input","div","onReady","info","host","HostType","Outlook","loadSettings","saveSettingsButton","addEventListener","URL"],"sourceRoot":""}