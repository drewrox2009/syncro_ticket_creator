!function(){"use strict";var e,t,n,o,s={14385:function(e){e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),t.hash&&(e+=t.hash),t.maybeNeedQuotes&&/[\t\n\f\r "'=<>`]/.test(e)?'"'.concat(e,'"'):e):e}},98362:function(e,t,n){e.exports=n.p+"assets/logo-filled.png"},58394:function(e,t,n){e.exports=n.p+"fd6ebc4970a52eece689.css"}},c={};function r(e){var t=c[e];if(void 0!==t)return t.exports;var n=c[e]={exports:{}};return s[e](n,n.exports,r),n.exports}r.m=s,r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,{a:t}),t},r.d=function(e,t){for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){var e;r.g.importScripts&&(e=r.g.location+"");var t=r.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");if(n.length)for(var o=n.length-1;o>-1&&(!e||!/^http(s?):/.test(e));)e=n[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e}(),r.b=document.baseURI||self.location.href,function(){function e(){t(document.getElementById("syncro-url").value,document.getElementById("syncro-api-key").value).then((()=>{console.log("Settings saved successfully")})).catch((e=>{console.error("Error saving settings:",e)}))}function t(e,t){return new Promise(((n,o)=>{Office.context.roamingSettings.set("syncroUrl",e),Office.context.roamingSettings.set("syncroApiKey",t),Office.context.roamingSettings.saveAsync((e=>{e.status===Office.AsyncResultStatus.Succeeded?n():o(e.error)}))}))}let n,o;async function s(){const e=document.getElementById("syncro-url").value,s=document.getElementById("syncro-api-key").value;if(e&&s)try{await t(e,s),o=e,n=s,i("Settings saved successfully. Initializing app...","success"),await async function(){try{await a()}catch(e){throw console.error("Error verifying API settings:",e),new Error("Invalid API settings. Please check your Syncro URL and API Key.")}}(),await async function(){try{const e=await a(),t=document.getElementById("customer-select");t.innerHTML='<option value="">Select a customer</option>',e.forEach((e=>{const n=document.createElement("option");n.value=e.id.toString(),n.textContent=u(e.name),t.appendChild(n)})),t.onchange=c}catch(e){throw console.error("Error populating customers:",e),i("Failed to load customers. Please check your Syncro settings.","error"),e}}(),l()}catch(e){console.error("Error saving settings:",e),i("Failed to save settings. Please try again.","error")}else i("Please enter both Syncro URL and API Key.","error")}async function c(){try{i("Loading contacts...");const e=document.getElementById("customer-select").value,t=await async function(e){const t=await fetch(`${o}/api/v1/customers/${e}/contacts`,{headers:{Authorization:`Bearer ${n}`}});if(!t.ok)throw new Error("Failed to fetch contacts");return t.json()}(parseInt(e)),s=document.getElementById("contact-select");s.innerHTML='<option value="">Select a contact</option>',t.forEach((e=>{const t=document.createElement("option");t.value=e.id.toString(),t.textContent=u(e.name),s.appendChild(t)})),l(),async function(){try{i("Loading assets...");const e=document.getElementById("customer-select").value,t=await async function(e){const t=await fetch(`${o}/api/v1/customers/${e}/assets`,{headers:{Authorization:`Bearer ${n}`}});if(!t.ok)throw new Error("Failed to fetch assets");return t.json()}(parseInt(e)),s=document.getElementById("asset-select");s.innerHTML='<option value="">Select an asset</option>',t.forEach((e=>{const t=document.createElement("option");t.value=e.id.toString(),t.textContent=u(e.name),s.appendChild(t)})),l()}catch(e){console.error("Error populating assets:",e),i("Failed to load assets. Please try again.","error")}}()}catch(e){console.error("Error populating contacts:",e),i("Failed to load contacts. Please try again.","error")}}async function r(){try{i("Creating ticket...");const e=await async function(){return new Promise((e=>{const t=Office.context.mailbox.item,n={subject:t?.subject||"",content:"",senderEmail:t?.from?.emailAddress||"",senderName:t?.from?.displayName||""};t?.body.getAsync(Office.CoercionType.Text,(t=>{t.status===Office.AsyncResultStatus.Succeeded&&(n.content=t.value),e(n)}))}))}(),t=document.getElementById("customer-select").value,s=document.getElementById("contact-select").value,c=document.getElementById("asset-select").value,r=document.getElementById("ticket-title").value||e.subject,a=document.getElementById("ticket-message").value||e.content,l={customer_id:parseInt(t),contact_id:parseInt(s),asset_id:c?parseInt(c):null,subject:r,problem_type:"Other",status:"New",comment:a},u=await async function(e){const t=await fetch(`${o}/api/v1/tickets`,{method:"POST",headers:{Authorization:`Bearer ${n}`,"Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok)throw new Error("Failed to create ticket");return t.json()}(l);console.log("Ticket created:",u),i("Ticket created successfully!","success")}catch(e){console.error("Error creating ticket:",e),i("Failed to create ticket. Please try again.","error")}}async function a(){const e=await fetch(`${o}/api/v1/customers`,{headers:{Authorization:`Bearer ${n}`}});if(!e.ok)throw new Error("Failed to fetch customers");return e.json()}function i(e,t="info"){const n=document.getElementById("status-message");if(!n){const e=document.createElement("div");e.id="status-message",document.body.insertBefore(e,document.body.firstChild)}const o=n||document.getElementById("status-message");o.textContent=u(e),o.className=`status-message ${t}`,o.style.display="block"}function l(){const e=document.getElementById("status-message");e&&(e.style.display="none")}function u(e){const t=document.createElement("div");return t.textContent=e,t.innerHTML}Office.onReady((t=>{t.host===Office.HostType.Outlook&&(document.getElementById("save-settings").onclick=e,function(){const e=Office.context.roamingSettings.get("syncroUrl"),t=Office.context.roamingSettings.get("syncroApiKey");e&&(document.getElementById("syncro-url").value=e),t&&(document.getElementById("syncro-api-key").value=t)}())})),Office.onReady((e=>{e.host===Office.HostType.Outlook&&(document.getElementById("create-ticket").onclick=r,async function(){const e={syncroUrl:Office.context.roamingSettings.get("syncroUrl"),syncroApiKey:Office.context.roamingSettings.get("syncroApiKey")};console.log("Retrieved settings:",e),n=e.syncroApiKey,o=e.syncroUrl,document.getElementById("app-body").innerHTML=`\n    <h2>Syncro API Settings</h2>\n    <div class="ms-TextField">\n      <label class="ms-Label" for="syncro-url">Syncro URL</label>\n      <input type="text" id="syncro-url" class="ms-TextField-field" value="${o||""}" required />\n    </div>\n    <div class="ms-TextField">\n      <label class="ms-Label" for="syncro-api-key">Syncro API Key</label>\n      <input type="password" id="syncro-api-key" class="ms-TextField-field" value="${n||""}" required />\n    </div>\n    <div class="ms-TextField">\n      <button id="save-settings" class="ms-Button ms-Button--primary">\n        <span class="ms-Button-label">Save Settings</span>\n      </button>\n    </div>\n  `,document.getElementById("save-settings").onclick=s}())}))}(),e=r(14385),t=r.n(e),n=new URL(r(58394),r.b),o=new URL(r(98362),r.b),t()(n),t()(o)}();
//# sourceMappingURL=taskpane.js.map